openapi: 3.0.0
info:
  title: 'Sonderplan API'
  description: "## Overview\nYou can use our REST API to securely access and modify the data within your Sonderplan account. This includes all the information within your bookings, projects and invoices that you can use to import / export data or create integrations with other systems and software that you use\n\n### General Notes\n\n#### Specifying Fields\nThe Sonderplan REST API allows you to specify a comma delimited string of exactly which fields are returned, using the `fields` parameter. Using this parameter has several advantages including:\n\n1. In future API versions we may change which fields are presented by default, so explicitly specifying the fields required overrides the defaults and ensure the fields are served\n2. Limiting fields reduces the processing we need to do and allows us to send you the data faster\n3. Some search filters only work if the field you are searching is added to the `fields` parameter.\n\nExample:\n\n```\nfields=id,name,start,duration_min\n```\n\n### Applying Filters\n\nThe Query Parameters section in each endpoint shows you special options that can be added to your request to customise the response we send you.\n\nMost endpoints offer the following query params:\n\n| Query Parameter | Description                                                    |\n|-----------------|----------------------------------------------------------------|\n| `fields`        | Only send the specified fields                                 |\n| `id`            | Specify one or more ids (comma seperated) of records to return |\n| `limit`         | The maximum number of records to return                        |\n| `page`          | The page number of records to return                           |\n| `order_asc` | Specify which field should be used to sort records `ascending` |\n| `order_desc` | Specify which field should be used to sort records `descending` |\n\nIn addition to the standard `id` param, you can also specify most other fields as a query parameter, useful for performing searching and filtering of records.\n\nFor example, you can specify `repeat_master_id=<repeat_booking_id>` to return all repeat children of that booking.\n\n#### Other Query Params\n\nRefer to the specific API endpoint documentation to see which other query params can be used.\n\nFor example, some endpoints allow specifying `updated_after=<UNIX TIMESTAMP>` which will only send added, edited and even deleted records that were modified after the unix timestamp.\n\n#### Applying multiple filters\n\nBy default, multiple filters are chained together using **OR** (either filter can be true and it will be included). You can change this behaviour by specifying `filter_operator=AND`, so each filter must be true to be included.\n\n#### Filtering by Custom Field Values\n\nFor modules that include custom fields, you can search by the value of a custom field by adding the `custom_field_<field id>` to the URL query parameters. You **must** also specify the custom field in the `fields` parameter.\n\n```\nGET https://api.sonderplan.com/v2/booking?fields=id,name,custom_field_238938&custom_field_238938=Offline\n```\n\nThis will return custom fields that contain the word 'Offline'.\n"
  contact:
    email: info@sonderplan.com
  version: '2.0'
servers:
  -
    url: 'https://api-dev.sonderplan.com'
    description: 'Development Server'
  -
    url: 'https://api.sonderplan.com'
    description: 'Production Server'
paths:
  /v2/instance:
    get:
      tags:
        - Instance
      summary: 'Get Instance'
      description: "Use this endpoint to retrieve meta and usage information about your Sonderplan instance\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 2cdfc2beef0c1eea89f425aada8200f0
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Instance' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/billable-item:
    get:
      tags:
        - 'Billable Item'
      summary: 'Get Billable Items'
      description: "Billable items can be added to bookings, quotes, and invoices as predefined entries with a fixed unit price.\n\nExamples of billable items include catering services provided to clients, storage fees (typically charged per terabyte), and media transcoding (usually billed per minute).\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `SALES` module is required to access this endpoint\n"
      operationId: 0f02a824adc29b7720e4494a6c6012c4
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of billable items to retrieve'
          schema:
            type: string
            format: string
        -
          name: name
          in: query
          description: 'Perform a partial match text search for the billable item name'
          schema:
            type: string
        -
          name: 'taxes[id]'
          in: query
          description: 'Return billable items based on a tax id attribute'
          schema:
            type: string
        -
          name: 'taxes[name]'
          in: query
          description: 'Return billable items based on a tax name attribute'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/BillableItem' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - 'Billable Item'
      summary: 'Update Billable Item'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n"
      operationId: abab7401afc7255af4aeee5584d7dd53
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the billable item to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Billable item object that needs to be updated'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillableItem'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - 'Billable Item'
      summary: 'Create Billable Item'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n"
      operationId: 6d70426c65117504c983e0528402c437
      requestBody:
        description: 'Billable Item object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/BillableItem'
                -
                  required: [name, currency]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - 'Billable Item'
      summary: 'Delete Billable Item'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n"
      operationId: a9ce2b52fb14b37af01a0bc02e8d9b0f
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the billable item to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/booking:
    get:
      tags:
        - Booking
      summary: 'Get Bookings'
      description: "Bookings can be understood as time-based events (with start and end dates / times), which are typically represented on a calendar.\n\nBookings include details about the event's timing, the resources being used, and additional information such as the client, associated project, rate details, and any custom attributes defined through custom fields.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `SCHEDULE` module is required to access this endpoint\n"
      operationId: e2f6e7146d13a35203882629164b319b
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of booking''s to retrieve'
          schema:
            type: string
            format: string
        -
          name: name
          in: query
          description: 'Perform a full text search for the booking name'
          schema:
            type: string
            format: string
        -
          name: resource_ids
          in: query
          description: 'Specify one or more resource ids and return only the bookings that have these as resources'
          schema:
            type: string
            format: string
        -
          name: where_in_resource
          in: query
          description: 'Specify one or more resource ids and return only the bookings that have these as resources'
          deprecated: true
          schema:
            type: string
            format: string
        -
          name: project_id
          in: query
          description: 'Specify one or more project ids and return only the bookings are booked to thes projects'
          schema:
            type: string
            format: string
        -
          name: from_time
          in: query
          description: 'Return any bookings starting after the given UNIX timestamp'
          schema:
            type: integer
            format: int32
        -
          name: to_time
          in: query
          description: 'Return any bookings starting before the given UNIX timestamp'
          schema:
            type: integer
            format: int32
        -
          name: resource_icon
          in: query
          description: 'The resources object will contain icon information for each resource'
          schema:
            type: boolean
        -
          name: resource_rates
          in: query
          description: 'The resources object will contain rates data for each resource relatd to the current booking'
          schema:
            type: boolean
        -
          name: resource_parent
          in: query
          description: 'The resources object will contain the name of the parent of the resource'
          schema:
            type: boolean
        -
          name: resource_ids_match_all
          in: query
          description: 'When set to `true`, only return bookings that include *all* the specified `resource_ids`. If `false` (default), bookings will be returned if they include *any* of the specified `resource_ids`.'
          schema:
            type: boolean
        -
          name: resource_time_entries
          in: query
          description: 'When set to `true`, time entries will be output within each of the the relevant booking resource objects'
          schema:
            type: boolean
        -
          $ref: '#/components/parameters/updated_after'
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Booking' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Booking
      summary: 'Update Booking'
      description: "<!-- theme: warning -->\n\n> #### Notifications\n>\n> To avoid generating lots of undesired notifications, take care when creating or updating bookings and consider using the `notify_user_resources` option which can be used to silence notifications for end users.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SCHEDULE` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `bookingEdited` webhook will be fired when this endpoint has run successfully\n"
      operationId: cb4a41f148864769878d7abd3906f2b5
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the booking to update'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: check_clashes
          in: query
          description: 'Report any clashes with new resources supplied, or existing resources on the booking'
          schema:
            type: boolean
        -
          name: notify_user_resources
          in: query
          description: 'Specifies if user resources (resources with a contact attached) should be sent an email notification about the updated booking'
          schema:
            type: boolean
            default: true
        -
          name: repeat_update_scope
          in: query
          description: 'If updating a repeat booking, specifies if the changes should be replicated to all, future or just the single booking. Default is `single`'
          schema:
            type: string
            enum:
              - single
              - future
              - all
      requestBody:
        description: 'Booking object that needs to be updated'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Booking
      summary: 'Create Booking'
      description: "<!-- theme: warning -->\n\n> #### Notifications\n>\n> To avoid generating lots of undesired notifications, take care when creating or updating bookings and consider using the `notify_user_resources` option which can be used to silence notifications for end users.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SCHEDULE` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `bookingCreated` webhook will be fired when this endpoint has run successfully\n"
      operationId: 1b8e6ac5e180713d2c79142dafb66717
      parameters:
        -
          name: check_clashes
          in: query
          description: 'Report any clashes with new resources supplied, or existing resources on the booking'
          schema:
            type: boolean
            default: true
        -
          name: notify_user_resources
          in: query
          description: 'Specifies if user resources (resources with a contact attached) should be sent an email notification about the created booking'
          schema:
            type: boolean
            default: true
      requestBody:
        description: 'Booking object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/Booking'
                -
                  required: [name, start, end]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Booking
      summary: 'Delete Booking'
      description: "<!-- theme: warning -->\n\n> #### Notifications\n>\n> To avoid generating lots of undesired notifications, take care when creating or updating bookings and consider using the `notify_user_resources` option which can be used to silence notifications for end users.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SCHEDULE` module is required to access this endpoint\n"
      operationId: 6ca5fdd6941b653781f43c9901eb6d63
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the booking to delete'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: notify_user_resources
          in: query
          description: 'Specifies if user resources (resources with a contact attached) should be sent an email notification about the deleted booking'
          schema:
            type: boolean
            default: true
        -
          name: repeat_delete_scope
          in: query
          description: 'If deleting a repeat booking, specifies if other repeats should be deleted as well, specifically to all, future or just the single booking. Default is `single`'
          schema:
            type: string
            enum:
              - single
              - future
              - all
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/booking/checkclash:
    get:
      tags:
        - Booking
      summary: 'Get Booking Clashes'
      description: "A booking clash is when one or more bookings overlap in time and (optionally) resources, which would create a double booking or scheduling conflict.\n\n<!-- theme: info -->\n\n> #### Creating a Booking?\n>\n> If you are creating a booking and want to be sure there won't be a collision, you **don't** need to call this endpoint first.\n>\n> New and updated bookings are automatically checked for clashes, unless the `check_clashes=false` is present as a query parameter.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `SCHEDULE` module is required to access this endpoint\n"
      operationId: f1f1a975cea8e2e7de2f4d7c56d482d2
      parameters:
        -
          name: id
          in: query
          description: 'The ID of a booking to exclude from the clash check'
          schema:
            type: integer
            format: int64
        -
          name: resources
          in: query
          description: 'Specify one or more resource ids and return only the booking clashes with these resources'
          schema:
            type: string
            format: string
        -
          name: start
          in: query
          description: 'Return any bookings starting after the given UNIX timestamp'
          required: true
          schema:
            type: integer
            format: int32
        -
          name: end
          in: query
          description: 'Return any bookings starting before the given UNIX timestamp'
          required: true
          schema:
            type: integer
            format: int32
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/BookingCheckClashes' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/booking/lock:
    put:
      tags:
        - Booking
      summary: 'Lock Booking'
      description: "The Sonderplan user interface features a booking locking system that prevents accidental overwrites when multiple users are editing the same booking.\n\nA booking lock is automatically created for a user that opens the booking editor sidebar, or clicks on *Edit* in the advanced booking editor. The lock is automatically deleted if the user saves and closes, or cancels the save operation.\n\nBooking locks automatically created by Sonderplan will last for 10 minutes, unless extended by the user when a lock expiration warning is shown. It is possible to manually lock and unlock bookings with these API endpoints and set the lock time to a custom time as required.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SCHEDULE` module is required to access this endpoint\n"
      operationId: 5d646e34f71080c04e3569c887a9daef
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the booking to lock'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Booking lock information'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/BookingLock'
                -
                  required: [lock_created_id, lock_expire_date]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/booking/unlock:
    put:
      tags:
        - Booking
      summary: 'Unlock Booking'
      description: "The Sonderplan user interface features a booking locking system that prevents accidental overwrites when multiple users are editing the same booking.\n\nA booking lock is automatically created for a user that opens the booking editor sidebar, or clicks on *Edit* in the advanced booking editor. The lock is automatically deleted if the user saves and closes, or cancels the save operation.\n\nBooking locks automatically created by Sonderplan will last for 10 minutes, unless extended by the user when a lock expiration warning is shown. It is possible to manually lock and unlock bookings with these API endpoints and set the lock time to a custom time as required.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SCHEDULE` module is required to access this endpoint\n"
      operationId: fdfc1627b357d6dedcc5becfa4daa366
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the booking to unlock'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/booking/bulk:
    post:
      tags:
        - Booking
      summary: 'Bulk Bookings'
      description: "This endpoint implements Create, Update and Delete of bulk bookings. It is intended for *one time* import operations, or other use cases that require higher performance at the expense of notification and realtime update features.\n\n<!-- theme: warning -->\n\n> #### Limitations\n>\n> Bookings created, edited or deleted using this endpoint won't trigger **email notifications**, **web-hooks** or **realtime schedule updates**\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SCHEDULE` module is required to access this endpoint\n"
      operationId: c6da57cb1614e12e530a7d493ade4821
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingBulkEdit'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  save: { properties: { success: { description: 'True if the save operation was successful', type: array, items: { properties: { id: { type: integer, example: 2340 }, external_id: { type: string, example: 1234j@kf9i094-090-9435aasdas } }, type: object } } }, type: object }
                  delete: { properties: { id: { properties: { success: { type: boolean } }, type: object }, external_id: { properties: { success: { type: boolean } }, type: object }, calendar_subscription_id: { properties: { success: { type: boolean } }, type: object } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/calendar-subscription/import:
    get:
      tags:
        - 'Calendar Subscription'
      summary: 'Get Calendar Subscriptions'
      description: "Sonderplan supports calendar subscriptions for both importing and exporting events, using the standard iCalendar format. This format is widely supported by popular calendar services like Google Calendar, Outlook, and Apple iCloud.\n\n### Import Calendar Sync Subscriptions\nImport calendar sync allows you to bring external events into Sonderplan, such as syncing events from Google Calendar to Sonderplan bookings or sharing bookings between two separate Sonderplan instances.\n\nTo set up an import, you can generate an iCalendar feed URL from the external calendar (e.g., Google Calendar) and copy it into a new Import Calendar subscription in Sonderplan. During setup, you can define default properties for imported bookings, such as resources, status, and associated projects.\n\nSonderplan automatically checks these feeds at least once an hour and updates the schedule with any changes to the imported events.\n\n### Export Calendar Subscriptions\nExport calendar subscriptions allow you to share bookings from Sonderplan with external calendars, such as syncing the bookings of specific resources to a shared Google Calendar.\n\nTo enable export feeds, you must activate booking feeds for resources, schedules, or projects in the Sonderplan UI. The feed URL can then be retrieved from the corresponding endpoint using the `feed` property, which can be shared or integrated with external calendar systems.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 40913711b2a781649dc47641d8a888ca
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of calendar subscriptions to retrieve'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/CalendarSubscriptionImportModel' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - 'Calendar Subscription'
      summary: 'Update Calendar Subscription'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 781daff770e2d161e8d6b05db3ccba2b
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the calendar subscription you wish to update'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  properties: { calendar_url: { readOnly: true } }
                  type: object
                -
                  $ref: '#/components/schemas/CalendarSubscriptionImportModel'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - 'Calendar Subscription'
      summary: 'Create Calendar Subscription'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: fb1d5aaf73738a7f960dad890a0a2e75
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/CalendarSubscriptionImportModel'
                -
                  required: [calendar_url]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - 'Calendar Subscription'
      summary: 'Delete Calendar Subscription'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 0b16fb727c6795794b1cb7df0cf75dff
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the calendar subscription you wish to delete'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/contact:
    get:
      tags:
        - Contact
      summary: 'Get Contacts'
      description: "You can create contacts for anyone you need to keep in touch with, such as your clients, suppliers, staff, or even resources.\n\nContacts help you store and organize important details like phone numbers, email addresses, and other contact information, making it easy to manage communication across your projects.\n<!-- theme: warning -->\n\n> #### Contact ID may not be unique\n>\n> Unlike virtually every other model, contact `id` cannot be assumed to be unique. Use `uuid` instead.\n>\n> Contacts may be either people or organizations and these are stored in separate tables in the database, each with its own auto-incrementing identifier.\n>\n> The contacts model creates a union between these two tables to allow simplified operations under a single namespace.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `CONTACT` module is required to access this endpoint\n"
      operationId: 6420aaf9f273cc488d03fd5c0b0bb2fd
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of contacts to retrieve. Warning, use uuid to guarantee a single result is returned'
          schema:
            type: string
            format: string
        -
          name: uuid
          in: query
          description: 'One or more (comma seperated) uuids of contacts to retrieve'
          schema:
            type: string
            format: string
        -
          name: name
          in: query
          description: 'Perform a partial match text search for the contact name'
          schema:
            type: string
        -
          name: type
          in: query
          description: 'Specify the type of contact you wish to return'
          schema:
            type: string
            enum:
              - person
              - organization
        -
          $ref: '#/components/parameters/updated_after'
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Contact' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Contact
      summary: 'Update Contact'
      description: "<!-- theme: warning -->\n\n> #### Contact ID may not be unique\n>\n> Unlike virtually every other model, contact `id` cannot be assumed to be unique. Use `uuid` instead.\n>\n> Contacts may be either people or organizations and these are stored in separate tables in the database, each with its own auto-incrementing identifier.\n>\n> The contacts model creates a union between these two tables to allow simplified operations under a single namespace.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `CONTACT` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `contactEdited` webhook will be fired when this endpoint has run successfully\n"
      operationId: 0ef41e39f41b8ccefc1393b794dfc10c
      parameters:
        -
          name: uuid
          in: query
          description: 'The uuid of the contact to update'
          required: true
          schema:
            type: string
      requestBody:
        description: 'Contact object that needs to be updated'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Contact
      summary: 'Create Contact'
      description: "<!-- theme: warning -->\n\n> #### Contact ID may not be unique\n>\n> Unlike virtually every other model, contact `id` cannot be assumed to be unique. Use `uuid` instead.\n>\n> Contacts may be either people or organizations and these are stored in separate tables in the database, each with its own auto-incrementing identifier.\n>\n> The contacts model creates a union between these two tables to allow simplified operations under a single namespace.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `CONTACT` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `contactCreated` webhook will be fired when this endpoint has run successfully\n"
      operationId: 2164431cfb7bcbfcb584c7a28b01d32a
      requestBody:
        description: 'Contact object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/Contact'
                -
                  required: [name, type]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Contact
      summary: 'Delete Contact'
      description: "<!-- theme: warning -->\n\n> #### Contact ID may not be unique\n>\n> Unlike virtually every other model, contact `id` cannot be assumed to be unique. Use `uuid` instead.\n>\n> Contacts may be either people or organizations and these are stored in separate tables in the database, each with its own auto-incrementing identifier.\n>\n> The contacts model creates a union between these two tables to allow simplified operations under a single namespace.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `CONTACT` module is required to access this endpoint\n"
      operationId: 85aaca8f113c27589be71e94eb7dcf16
      parameters:
        -
          name: uuid
          in: query
          description: 'The uuid of the contact to delete'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/custom-field:
    get:
      tags:
        - 'Custom Field'
      summary: 'Get Custom Fields'
      description: "Custom fields are user-defined fields that let you capture additional information tailored to your organization’s specific needs. They can be added to bookings, projects, resources, contacts, quotes, and invoices, offering the flexibility to store and manage data not covered by the default fields.\n\nCustom fields can be configured with three input types: single-line text, multi-line text, and dropdown select menus with predefined options.\n\nFor example, you could use custom fields to track additional producers, links to files in external systems, internal notes, or client preferences.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 5bb93eb8e5fa97acf57dedfbbf8838d4
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of custom fields to retrieve.'
          schema:
            type: string
            format: string
        -
          name: name
          in: query
          description: 'Perform a partial match text search for the custom field name'
          schema:
            type: string
        -
          name: description
          in: query
          description: 'Perform a partial match text search for the custom field description'
          schema:
            type: string
        -
          name: type
          in: query
          description: 'Specify the type of custom field you wish to return'
          schema:
            type: string
            enum:
              - text
              - textarea
              - select
        -
          name: module
          in: query
          description: 'Specify the module you wish to get custom fields for'
          schema:
            type: string
            enum:
              - booking
              - project
              - people
              - organization
              - quote
              - invoice
              - quote_invoice
              - billable_item
        -
          name: required
          in: query
          description: 'Return fields marked as required'
          schema:
            type: boolean
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/CustomField' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - 'Custom Field'
      summary: 'Update Custom Field'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 8324afbc0a111e4c44dce0adf90de363
      parameters:
        -
          name: id
          in: query
          description: 'The id of the custom field to update'
          required: true
          schema:
            type: string
      requestBody:
        description: 'Custom field object that needs to be updated'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomField'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - 'Custom Field'
      summary: 'Create Custom Field'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 5867b4d677be1ac9df09add89a1828d9
      requestBody:
        description: 'Custom Field object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/CustomField'
                -
                  required: [name, type, module]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - 'Custom Field'
      summary: 'Delete Custom Field'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: e2d438c8b64e62a4aa5eee2ceebb67b7
      parameters:
        -
          name: id
          in: query
          description: 'The id of the custom field to delete'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/group:
    get:
      tags:
        - Group
      summary: 'Get Groups'
      description: "In Sonderplan, a Group is a set of users who share the same permissions and access rights. Groups simplify user management by assigning roles and responsibilities collectively rather than individually.\n\nFor instance, you can create groups for administrators and staff members, each with tailored permissions, such as access to specific resources, schedules, or features. You can also restrict access to certain modules, like quotes and invoices, for specific groups.\n\nGroups ensure consistent access control, streamline role-based management, and make it easy to update permissions for multiple users at once.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 9c72797fa13251b639d7de69cf1cdd2e
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of groups to retrieve'
          schema:
            type: string
        -
          name: name
          in: query
          description: 'Perform a full text search for the group name'
          schema:
            type: string
        -
          name: description
          in: query
          description: 'Perform a full text search for the group description'
          schema:
            type: string
        -
          name: acl_schedule
          in: query
          description: 'Filter groups that match the permission for Schedule Module'
          schema:
            type: string
            enum:
              - '--'
              - R-
              - RW
        -
          name: acl_project
          in: query
          description: 'Filter groups that match the permission for Project Module'
          schema:
            type: string
            enum:
              - '--'
              - R-
              - RW
        -
          name: acl_task
          in: query
          description: 'Filter groups that match the permission for Task Module'
          schema:
            type: string
            enum:
              - '--'
              - R-
              - RW
        -
          name: acl_finance
          in: query
          description: 'Filter groups that match the permission for Finance Module'
          schema:
            type: string
            enum:
              - '--'
              - R-
              - RW
        -
          name: acl_report
          in: query
          description: 'Filter groups that match the permission for Report Module'
          schema:
            type: string
            enum:
              - '--'
              - R-
              - RW
        -
          name: acl_contact
          in: query
          description: 'Filter groups that match the permission for Contact Module'
          schema:
            type: string
            enum:
              - '--'
              - R-
              - RW
        -
          name: acl_admin
          in: query
          description: 'Filter groups that match the permission for Admin Module'
          schema:
            type: string
            enum:
              - '--'
              - R-
              - RW
        -
          name: acl_account
          in: query
          description: 'Filter groups that match the permission for Account Module'
          schema:
            type: string
            enum:
              - '--'
              - R-
              - RW
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Group' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Group
      summary: 'Update Group'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: f171bb9d2364e42b449cb61bd565d51d
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the group you wish to update'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Group
      summary: 'Create Group'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 19dc24d4685388f6928dc5264a140770
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/Group'
                -
                  required: [name]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Group
      summary: 'Delete Group'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 16d8db0a716472cc49d87c5530e84acc
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the group you wish to update'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The resource was successfully deleted'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the deleted object', type: integer, example: 2384 } }, type: object }
                type: object
        '404':
          description: 'The resource to be deleted could not be found'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 404 }, message: { description: 'More detail about the error', type: integer, example: 'Requested resource was not found' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/invoice:
    get:
      tags:
        - Invoice
      summary: 'Get Invoices'
      description: "An invoice is a financial document issued to a client to request payment for services rendered or resources used.\n\nInvoices typically include key details such as the client’s information, a list of bookings, services or items being billed, applicable rates, taxes, discounts, and the total amount due. They serve as an official record of the transaction and can be customized to include additional details like payment terms, due dates, or custom notes.\n\nInvoices may also be generated from approved quotes, streamlining the billing process.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `SALES` module is required to access this endpoint\n"
      operationId: 7c6b217613142e0e64e39f87613bd0d4
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of invoices to retrieve'
          schema:
            type: string
        -
          name: prefix
          in: query
          description: 'Perform a partial match text search for the invoice prefix'
          schema:
            type: string
        -
          name: number
          in: query
          description: 'One or more (comma seperated) invoice numbers to retrieve'
          schema:
            type: integer
        -
          name: status_id
          in: query
          description: 'Perform an exact match for the invoice status_id. 1 = Draft, 2 = Submitted, 3 = Awaiting Payment, 4 = Paid'
          schema:
            type: integer
        -
          name: project_id
          in: query
          description: 'Perform an exact match for the invoice project_id'
          schema:
            type: integer
        -
          name: from_time
          in: query
          description: 'Return invoices with created date greater than this UNIX timestamp'
          schema:
            type: integer
        -
          name: to_time
          in: query
          description: 'Return invoices with created date less than this UNIX timestamp'
          schema:
            type: integer
        -
          name: created_sp_flag
          in: query
          description: 'If true, return invoices created in Sonderplan. If false, return invoices created in FoxOMS'
          schema:
            type: boolean
        -
          name: template_id
          in: query
          description: 'Return invoices using the specified template_id'
          schema:
            type: integer
        -
          name: currency
          in: query
          description: 'Return invoices using the specified currency shortcode'
          schema:
            type: string
          example: AUD
        -
          $ref: '#/components/parameters/updated_after'
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InvoiceModel' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Invoice
      summary: 'Update Invoice'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `invoiceEdited` webhook will be fired when this endpoint has run successfully\n"
      operationId: cb4499ae0b2c5a7526a046ca9b150297
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the invoice to update'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: validation_mode
          in: query
          description: 'What validation method should the api use'
          schema:
            type: string
            default: strict
            enum:
              - strict
              - auto_correct
      requestBody:
        description: 'Invoice object that needs to be updated'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/InvoiceModel'
                -
                  required: [client]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Invoice
      summary: 'Create Invoice'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `invoiceCreated` webhook will be fired when this endpoint has run successfully\n"
      operationId: 965df11fca5fc4fe7cb55ec79cf95882
      parameters:
        -
          name: validation_mode
          in: query
          description: 'What validation method should the api use'
          schema:
            type: string
            default: strict
            enum:
              - strict
              - auto_correct
      requestBody:
        description: 'Invoice object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/InvoiceModel'
                -
                  required: [client]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Invoice
      summary: 'Delete Invoice'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n"
      operationId: 56be6fe83a9c813188549a7848235961
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the invoice to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/quote:
    get:
      tags:
        - Quote
      summary: 'Get Quotes'
      description: "In Sonderplan, a quote is a detailed proposal that outlines the estimated costs for a project or set of bookings.\n\nQuotes typically include information such as the client, associated bookings, resources, rates, taxes, discounts, and any additional charges or custom details. They are used to provide clients with a clear breakdown of costs before confirming a project, helping ensure transparency and agreement on pricing.\n\nOnce approved, quotes can often be converted into invoices or used as a basis for further planning.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `SALES` module is required to access this endpoint\n"
      operationId: 55f4f57e3365627b5c2a85d7798234c6
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of quotes to retrieve'
          schema:
            type: string
        -
          name: prefix
          in: query
          description: 'Perform a partial match text search for the quote prefix'
          schema:
            type: string
        -
          name: number
          in: query
          description: 'One or more (comma seperated) quote numbers to retrieve'
          schema:
            type: integer
        -
          name: status_id
          in: query
          description: 'Perform an exact match for the quote status_id. 1 = Draft, 2 = Sent, 3 = Accepted, 4 = Invoiced, 5 = Declined'
          schema:
            type: integer
        -
          name: project_id
          in: query
          description: 'Perform an exact match for the quote project_id'
          schema:
            type: integer
        -
          name: from_time
          in: query
          description: 'Return quotes with created date greater than this UNIX timestamp'
          schema:
            type: integer
        -
          name: to_time
          in: query
          description: 'Return quotes with created date less than this UNIX timestamp'
          schema:
            type: integer
        -
          name: created_sp_flag
          in: query
          description: 'If true, return quotes created in Sonderplan. If false, return quotes created in FoxOMS'
          schema:
            type: boolean
        -
          name: template_id
          in: query
          description: 'Return quotes using the specified template_id'
          schema:
            type: integer
        -
          name: currency
          in: query
          description: 'Return quotes using the specified currency shortcode'
          schema:
            type: string
          example: AUD
        -
          $ref: '#/components/parameters/updated_after'
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/QuoteModel' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Quote
      summary: 'Update Quote'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `quoteEdited` webhook will be fired when this endpoint has run successfully\n"
      operationId: 5882ad83933c2634374013cea464bc5a
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the quote to update'
          required: true
          schema:
            type: integer
            format: int64
        -
          name: validation_mode
          in: query
          description: 'What validation method should the api use'
          schema:
            type: string
            default: strict
            enum:
              - strict
              - auto_correct
      requestBody:
        description: 'Invoice object that needs to be updated'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/QuoteModel'
                -
                  required: [client]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Quote
      summary: 'Create Quote'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `quoteCreated` webhook will be fired when this endpoint has run successfully\n"
      operationId: 06d30ab21a559105bc78d5206155d4f9
      parameters:
        -
          name: validation_mode
          in: query
          description: 'What validation method should the api use'
          schema:
            type: string
            default: strict
            enum:
              - strict
              - auto_correct
      requestBody:
        description: 'Quote object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/QuoteModel'
                -
                  required: [client]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Quote
      summary: 'Delete Quote'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n"
      operationId: 0c75346d96c956e3d91c169c82972995
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the quote to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/invoice/duplicate:
    post:
      tags:
        - Invoice
      summary: 'Duplicate Invoice'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `invoiceCreated` webhook will be fired when this endpoint has run successfully\n"
      operationId: f11cb328257b870bed7650dee8464204
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the invoice to duplicate'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/quote/duplicate:
    post:
      tags:
        - Quote
      summary: 'Duplicate Quote'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `SALES` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `quoteCreated` webhook will be fired when this endpoint has run successfully\n"
      operationId: ed7d5506d6bb77ee3b7f264a15a1e896
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the quote to duplicate'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/invoice-template:
    get:
      tags:
        - 'Invoice Template'
      summary: 'Get Invoice Templates'
      description: "An invoice (or quote) template is a customizable layout used to generate invoices and quotes with a consistent format and design.\n\nIt defines how details such as client information, items, taxes, and totals are displayed. Invoice templates can include your branding elements, like logos and company information, as well as custom fields or notes specific to your business needs.\n\nBoth **Quote** and **Invoice** templates can be created, edited and deleted using this endpoint so be sure to use the correct `type_id`.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 46a6fb68cd208b7c57c90a3833e3b1bc
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of invoice templates to retrieve'
          schema:
            type: string
        -
          name: name
          in: query
          description: 'Perform a full text search for the invoice template name'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/InvoiceTemplate' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - 'Invoice Template'
      summary: 'Update Invoice Template'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 89e6bdd057715e9b345f5b240263733a
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the invoice template you wish to update'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the updated object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - 'Invoice Template'
      summary: 'Create Invoice Template'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 21335e61ab15682e8f637c0e89ee2aef
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/InvoiceTemplate'
                -
                  required: [name, type_id]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the invoice template' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - 'Invoice Template'
      summary: 'Delete Invoice Template'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 34d6dc80841fb4c27a266f1f73b52fe3
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the invoice template you wish to delete'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the deleted object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/user:
    get:
      tags:
        - User
      summary: 'Get Users'
      description: "A user in Sonderplan is an individual with access to the platform, typically associated with an account used to manage bookings, resources, projects, create quotes and invoices, and perform administrative tasks.\n\nEach user’s permissions are determined by their group membership, which assigns roles such as administrator, staff member, or limited-access user. These roles define what actions the user can perform and the data they can view or edit within the system.\n\nEvery user is aliased to a contact record and can have personalized settings, including notification preferences and default configurations.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 423decbe3baf90e90c8c6a24c11eb12c
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of users to retrieve'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/User' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - User
      summary: 'Update User'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 94b6b320e9e42873c66fd83ba7df47dd
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the user you wish to update'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - User
      summary: 'Create User'
      description: "<!-- theme: danger -->\n\n> #### Additional charges may be incurred\n>\n> If you are using Sonderplan on a **Flexible Billing** plan, creating users will result in additional charges (calculated pro rata) being automatically charged to your credit card.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 307c98fe1cb1fdbb4b472414e219beae
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/User'
                -
                  required: ['first_name,primary_email,group_id']
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - User
      summary: 'Delete User'
      description: "<!-- theme: success -->\n\n> #### Account Credits\n>\n> If you're using Sonderplan with a **Flexible Billing** plan, deleting users will generate unused time credits for the user. These credits will be automatically applied to your account and used toward future invoices.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 5dfb888d67f3e4dc121dec7612efa316
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the user to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/project:
    get:
      tags:
        - Project
      summary: 'Get Projects'
      description: "In Sonderplan a project represents a container for grouping related bookings, files, quotes and invoices. Projects allow users to organize their work by associating bookings with a specific purpose, client, or final deliverable (such as a movie or commercial).\n\nProjects include metadata such as the project name, client information, deadlines, files, and any custom attributes defined (via custom fields) by the user. This helps streamline project management and reporting by keeping all relevant details in one place.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: 18636e14983eb62a55dffee8364ab01b
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of projects to retrieve'
          schema:
            type: string
            format: string
        -
          name: name
          in: query
          description: 'Perform a partial match text search for the project name'
          schema:
            type: string
        -
          name: code
          in: query
          description: 'Perform a partial match text search for the project code'
          schema:
            type: string
        -
          name: description
          in: query
          description: 'Perform a partial match text search for the project description'
          schema:
            type: string
        -
          name: status_id
          in: query
          description: 'Perform an exact match for the project status_id'
          schema:
            type: integer
        -
          name: private
          in: query
          description: 'Perform an exact match for the project private boolean'
          schema:
            type: boolean
        -
          name: parent_folder_id
          in: query
          description: 'Perform an exact match for the project parent_folder_id'
          schema:
            type: integer
        -
          name: color_background
          in: query
          description: 'Perform a partial match text search for the projects background color'
          schema:
            type: string
        -
          name: color_text
          in: query
          description: 'Perform a partial match text search for the projects text color'
          schema:
            type: string
        -
          $ref: '#/components/parameters/updated_after'
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Project' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Project
      summary: 'Update Project'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `PROJECT` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `projectEdited` webhook will be fired when this endpoint has run successfully\n"
      operationId: bec18a3d5bb580a9b4d1e1f321e35b72
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the project to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Project object that needs to be updated'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Project
      summary: 'Create Project'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `PROJECT` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `projectCreated` webhook will be fired when this endpoint has run successfully\n"
      operationId: 767e57a9c1c6edd3d50a1d9808e22dc6
      requestBody:
        description: 'Project object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/Project'
                -
                  required: [name]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Project
      summary: 'Delete Project'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: 33c6a1f79ab9287bede5049face36a7e
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the project to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/project/folder:
    get:
      tags:
        - Project
      summary: 'Get Project Folders'
      description: "Project folders enable projects to be grouped and organized into one or more hierarchical levels.\n\nFor example, if you're working on an episodic production, you can create a project folder for the season or series and organize all related projects within that folder.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: 0976c246a5767c2ace9f476703de374d
      parameters:
        -
          name: name
          in: query
          description: 'Perform a partial match text search for the project folder''s name'
          schema:
            type: string
        -
          name: parent_folder_id
          in: query
          description: 'Perform an exact match for the project folder''s parent_folder_id'
          schema:
            type: integer
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProjectFolder' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Project
      summary: 'Update Project Folder'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: d1c142d70d7d938b3dda5444365127ec
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the project folder to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Project folder object with modifications'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFolder'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Project
      summary: 'Create Project Folder'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: 0acf0a41f425c3dd6f9a48e573c87231
      requestBody:
        description: 'Project folder object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/ProjectFolder'
                -
                  required: [name]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Project
      summary: 'Delete Project Folder'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: eefe48e9ff7f66451146a0d660511f9a
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the project folder to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/project/phase:
    get:
      tags:
        - Project
      summary: 'Get Project Phases'
      description: "\nProjects are often divided into distinct phases, each associated with one or more deadlines. Project phases provide a way to visually organize and track your project's progress using phase markers and deadlines displayed on the Sonderplan Project Timeline.\n\nFor example, in a typical post-production workflow, you might have phases for ingesting media, assembly editing, offline/online editing, grading, and final export.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: be393fc63617b72c557586351bde3ddd
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) `id`''s of project phases to retrieve'
          schema:
            type: string
            format: string
        -
          name: name
          in: query
          description: 'Perform a partial match text search for the project phase `name`'
          schema:
            type: string
        -
          name: type_id
          in: query
          description: 'Perform an exact match for the project phase `type_id`'
          schema:
            type: integer
        -
          name: project_id
          in: query
          description: 'Perform an exact match for the project phase `project_id`'
          schema:
            type: integer
        -
          name: color_background
          in: query
          description: 'Perform a partial match text search for the project phase background color'
          schema:
            type: string
        -
          name: color_text
          in: query
          description: 'Perform a partial match text search for the project phase text color'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/ProjectPhase' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Project
      summary: 'Update Project Phase'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: 88917194ec36b444686bdea1428434b3
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the project phase to edit'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Project Phase object'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPhase'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Project
      summary: 'Create Project Phase'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: 5e4e1cd13b8ff5f1661e3e83fd5e3222
      requestBody:
        description: 'Project Phase object'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/ProjectPhase'
                -
                  required: [name, project_id, type_id]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Project
      summary: 'Delete Project Phase'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `PROJECT` module is required to access this endpoint\n"
      operationId: 73c7147637a6605dc8b48c0a3c7d15ab
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the project phase to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/rate-scheme:
    get:
      tags:
        - 'Rate Scheme'
      summary: 'Get Rate Schemes'
      description: "Rate schemes function like rate cards, allowing you to define costs and discounts for each resource. They can be tailored based on criteria such as date, time, client, or a combination of these.\n\nEach rate scheme lets you specify hourly, daily, and weekly buy and sell rates, providing flexibility to match your pricing structure.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 76f225b983223d7901aefcab9fc0e733
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) ids of Rate Schemes to retrieve'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/RateScheme' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - 'Rate Scheme'
      summary: 'Update Rate Scheme'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 56d7235562b4096d13585f1be7203e61
      parameters:
        -
          name: id
          in: query
          description: 'The id of the rate scheme to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Project object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateScheme'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - 'Rate Scheme'
      summary: 'Create Rate Scheme'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: a07efc490387134c0780340907ed3f80
      requestBody:
        description: 'Rate Scheme object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/RateScheme'
                -
                  required: [name, type_id, currency]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - 'Rate Scheme'
      summary: 'Delete Rate Scheme'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: d184f9a03a470b4707f6a5ea79faef85
      parameters:
        -
          name: id
          in: query
          description: 'The id of the rate scheme to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/resource:
    get:
      tags:
        - Resource
      summary: 'Get Resources'
      description: "In Sonderplan, resources refer to any item or entity that can be booked, such as rooms, people, equipment, or actions like recreation and sick leave.\n\nFor people resources, it’s recommended to link them to a corresponding contact record using the type_person_id attribute.\n\nResources can be organized into hierarchical groups using the parent_id attribute, which enables the visual nesting of similar resources for better organization.\n\nAdditionally, resources must be assigned to at least one schedule to appear in the resource selection menu in Sonderplan.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: a67930566d17fbe8ba57459eb97e5473
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) ids of resources to retrieve'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Resource' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Resource
      summary: 'Update Resource'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `resourceEdited` webhook will be fired when this endpoint has run successfully\n"
      operationId: 36bc956bbaa32952b0fc7cafa0ef617b
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the resource to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Resource object that needs to be updated'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Resource
      summary: 'Create Resource'
      description: "<!-- theme: danger -->\n\n> #### Additional charges may be incurred\n>\n> If you are using Sonderplan on a **Flexible Billing** plan, creating resources will result in additional charges (calculated pro rata) being automatically charged to your credit card.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `resourceCreated` webhook will be fired when this endpoint has run successfully\n"
      operationId: 085ee661588c428a3bb7fb34cd17f705
      requestBody:
        description: 'Resource object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/Resource'
                -
                  required: [name, type_id]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Resource
      summary: 'Delete Resource'
      description: "<!-- theme: success -->\n\n> #### Account Credits\n>\n> If you're using Sonderplan with a **Flexible Billing** plan, deleting resources will generate unused time credits for the resource. These credits will be automatically applied to your account and used toward future invoices.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 4e3ba5fa6b1c6bf768f06be82730f511
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the resource to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/schedule:
    get:
      tags:
        - Schedule
      summary: 'Get Schedules'
      description: "A Schedule is a collection of resources displayed in a timeline or calendar view, designed to help you manage and visualize resource usage.\n\nSchedules make it easy to group and organize resources, such as rooms, equipment, or personnel, based on specific criteria like departments, resource types, or office locations.\n\nAdditionally, schedules include access control features, allowing you to restrict viewing and booking permissions to specific users or groups for enhanced security and organization.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 345058d879d2f237aa50542de59be7c9
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) ids of schedules to retrieve'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Schedule' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Schedule
      summary: 'Update Schedule'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `scheduleEdited` webhook will be fired when this endpoint has run successfully\n"
      operationId: 784e22feecd123cf03469e0da23a568a
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the schedule to update'
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Schedule object that needs to be updated'
        required: true
        content:
          application/json:
            schema: {  }
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Schedule
      summary: 'Create Schedule'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n<!-- theme: success -->\n> #### Webhook Trigger\n>\n> The `scheduleCreated` webhook will be fired when this endpoint has run successfully\n"
      operationId: b4ed591797250c36973778eab2ca5efe
      requestBody:
        description: 'Schedule object that needs to be added'
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/Schedule'
                -
                  required: [name]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Schedule
      summary: 'Delete Schedule'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: a9ab695a2d2dfc92ef50ff9bdba63fe6
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the schedule to delete'
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success'
        '404':
          description: 'Not Found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/notFound'
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/status:
    get:
      tags:
        - Status
      summary: 'Get Status'
      description: "Statuses can be thought of as labels that indicate the current state or progress of a booking, helping users track and manage bookings by categorizing them based on their workflow stage. Examples include \"Confirmed,\" \"Tentative,\" \"Cancelled,\" or custom statuses designed to suit your organization’s needs.\n\nBooking statuses are essential for organizing schedules, as they visually distinguish bookings and can trigger specific actions like sending notifications or updating workflows.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 6695be30bbbe96afb73d94f8683efad7
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of statuses to retrieve'
          schema:
            type: string
        -
          name: name
          in: query
          description: 'Perform a full text search for the status name'
          schema:
            type: string
        -
          name: description
          in: query
          description: 'Perform a full text search for the status description'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Status' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Status
      summary: 'Update Status'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 33066fd40141ee8f369a0927fa322864
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the status you wish to update'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Status'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the Status' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Status
      summary: 'Create Status'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: f6cd447bcbdcefa61b9e34743d8e59c4
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/Status'
                -
                  required: [name, type_id]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the status' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Status
      summary: 'Delete Status'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: f547660dce609a6b45457e53a1f65137
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the status you wish to update'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The resource was successfully deleted'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the deleted object', type: integer, example: 2384 } }, type: object }
                type: object
        '404':
          description: 'The resource to be deleted could not be found'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 404 }, message: { description: 'More detail about the error', type: integer, example: 'Requested resource was not found' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/tax:
    get:
      tags:
        - Tax
      summary: 'Get Taxes'
      description: "In Sonderplan, taxes represent the percentage-based fees applied to line items within quotes, or invoices to comply with financial regulations. Taxes can be configured to reflect applicable rates, such as VAT, GST, or sales tax, depending on your location or business requirements.\n\nSonderplan allows you to create and manage multiple tax rates, ensuring accurate calculations for different scenarios. Taxes are automatically applied to line items as specified, and they appear as a separate entry on invoices and quotes for transparency.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 1566f1a745241b40b4945124aa7e2728
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of taxes to retrieve'
          schema:
            type: string
        -
          name: name
          in: query
          description: 'Perform a full text search for the tax name'
          schema:
            type: string
        -
          name: rate
          in: query
          description: 'Perform a direct match for the tax rate'
          schema:
            type: string
        -
          name: code
          in: query
          description: 'Perform a full text search for the tax code'
          schema:
            type: string
        -
          name: compound
          in: query
          description: 'Perform a direct match for the tax compound setting'
          schema:
            type: boolean
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/Tax' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - Tax
      summary: 'Update Tax'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 437a670b0c94e945f9a023b81da824f7
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the tax you wish to update'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tax'
      responses:
        '200':
          description: 'The resource was successfully updated'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the updated object', type: integer, example: 2384 } }, type: object }
                type: object
        '404':
          description: 'The resource to be updated could not be found'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 404 }, message: { description: 'More detail about the error', type: integer, example: 'Requested resource was not found' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - Tax
      summary: 'Create Tax'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 284abd5ac29f189475e7a42bd4e836a6
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/Tax'
                -
                  required: [name, rate]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - Tax
      summary: 'Delete Tax'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: fe4c8482391e4477da807f0c994794e0
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the tax you wish to update'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The resource was successfully deleted'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the deleted object', type: integer, example: 2384 } }, type: object }
                type: object
        '404':
          description: 'The resource to be deleted could not be found'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 404 }, message: { description: 'More detail about the error', type: integer, example: 'Requested resource was not found' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/time-activity:
    get:
      tags:
        - 'Time Activity'
      summary: 'Get Time Activities'
      description: "Time activities are predefined task categories that users can reference when logging time entries in the time-tracking system. By standardizing task types, predefined activities enhance reporting accuracy, providing insights into the specific work required to complete a project.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 47f3792ad9209ddde42cd6125c6f672e
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of time activies to retrieve'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TimeActivity' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - 'Time Activity'
      summary: 'Update Time Activity'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 410c3c7d7f97d38f990dc0265039a03a
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the time activity you wish to update'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: {  }
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the updated object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - 'Time Activity'
      summary: 'Create Time Activity'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 7c01a34cc5f43f1c48fb5123dd5d254b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/TimeActivity'
                -
                  required: [name]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - 'Time Activity'
      summary: 'Delete Time Activity'
      description: "<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: cdcca960bfd2da614a0743826c5d3a83
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the time activity you wish to delete'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The resource was successfully deleted'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the deleted object', type: integer, example: 2384 } }, type: object }
                type: object
        '404':
          description: 'The resource to be deleted could not be found'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 404 }, message: { description: 'More detail about the error', type: integer, example: 'Requested resource was not found' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/time-entry:
    get:
      tags:
        - 'Time Entry'
      summary: 'Get Time Entries'
      description: "Time activities are predefined task categories that users can reference when logging time entries in the time-tracking system.\n\nBy standardising task types, predefined activities enhance reporting accuracy, providing insights into the specific work required to complete a project.\n<!-- theme: info -->\n\n> #### Time Entries Access\n>\n> Currently, only users with Administrative level have access to view, create and modify time entries for other users time entries.\n>\n> All users are able to create, edit and delete their own time entries, however this uses a separate API not currently available for public access.\n> \n> Please contact our Support team if you are interested in accessing this private API.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `READ` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 37e99f91a870e882f7e6089cbce5a209
      parameters:
        -
          name: id
          in: query
          description: 'One or more (comma seperated) IDs of time entries to retrieve'
          schema:
            type: string
        -
          name: project_id
          in: query
          description: 'One or more (comma seperated) project ids to retrieve associated time entries'
          schema:
            type: string
        -
          name: booking_id
          in: query
          description: 'One or more (comma seperated) booking ids to retrieve associated time entries'
          schema:
            type: string
        -
          $ref: '#/components/parameters/fields'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/order_asc'
        -
          $ref: '#/components/parameters/order_desc'
        -
          $ref: '#/components/parameters/filter_operator'
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  data: { type: array, items: { $ref: '#/components/schemas/TimeEntry' } }
                  meta: { $ref: '#/components/schemas/pagination' }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    put:
      tags:
        - 'Time Entry'
      summary: 'Update Time Entry'
      description: "<!-- theme: info -->\n\n> #### Time Entries Access\n>\n> Currently, only users with Administrative level have access to view, create and modify time entries for other users time entries.\n>\n> All users are able to create, edit and delete their own time entries, however this uses a separate API not currently available for public access.\n> \n> Please contact our Support team if you are interested in accessing this private API.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 0129b0572a2eb6f7209cb99c469abfb8
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the time entry you wish to update'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: {  }
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the updated object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    post:
      tags:
        - 'Time Entry'
      summary: 'Create Time Entry'
      description: "<!-- theme: info -->\n\n> #### Time Entries Access\n>\n> Currently, only users with Administrative level have access to view, create and modify time entries for other users time entries.\n>\n> All users are able to create, edit and delete their own time entries, however this uses a separate API not currently available for public access.\n> \n> Please contact our Support team if you are interested in accessing this private API.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: c50fc0bfc1231656b8e03a5e822211e1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                -
                  $ref: '#/components/schemas/TimeEntry'
                -
                  required: [owner_id, start, name]
      responses:
        '200':
          description: 'Successful Operation'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the newly created object', type: integer, example: 2384 } }, type: object }
                type: object
        '400':
          description: 'Request failed validation'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 400 }, message: { description: 'More detail about why the request failed validation', type: integer, example: 'name is required... Name of the tax' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
    delete:
      tags:
        - 'Time Entry'
      summary: 'Delete Time Entry'
      description: "<!-- theme: info -->\n\n> #### Time Entries Access\n>\n> Currently, only users with Administrative level have access to view, create and modify time entries for other users time entries.\n>\n> All users are able to create, edit and delete their own time entries, however this uses a separate API not currently available for public access.\n> \n> Please contact our Support team if you are interested in accessing this private API.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: 737f8845ef1ec2b035bc8e21e8c5cc67
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the time entry you wish to delete'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The resource was successfully deleted'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the deleted object', type: integer, example: 2384 } }, type: object }
                type: object
        '404':
          description: 'The resource to be deleted could not be found'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 404 }, message: { description: 'More detail about the error', type: integer, example: 'Requested resource was not found' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
  /v2/time-entry/stop:
    patch:
      tags:
        - 'Time Entry'
      summary: 'Stop Time Entry'
      description: "<!-- theme: info -->\n\n> #### Time Entries Access\n>\n> Currently, only users with Administrative level have access to view, create and modify time entries for other users time entries.\n>\n> All users are able to create, edit and delete their own time entries, however this uses a separate API not currently available for public access.\n> \n> Please contact our Support team if you are interested in accessing this private API.\n<!-- theme: none -->\n> #### ACL Permissions\n>\n> `WRITE` access to the `ADMIN` module is required to access this endpoint\n"
      operationId: b44ccf15b141e1b04733d64922a5d985
      parameters:
        -
          name: id
          in: query
          description: 'The ID of the time entry you wish to stop'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'The resource was successfully stopped'
          content:
            application/json:
              schema:
                properties:
                  success: { properties: { id: { description: 'The ID of the stopped object', type: integer, example: 2384 } }, type: object }
                type: object
        '404':
          description: 'The resource to be stopped could not be found'
          content:
            application/json:
              schema:
                properties:
                  error: { properties: { code: { description: 'The HTTP error code', type: integer, example: 404 }, message: { description: 'More detail about the error', type: integer, example: 'Requested resource was not found' } }, type: object }
                type: object
        '401':
          description: 'Authorization information is missing or invalid'
      security:
        -
          bearer: []
components:
  schemas:
    commonModelMeta:
      title: 'Common Meta Model'
      properties:
        created_id:
          description: 'The unique ID of the person (user) who created this record'
          type: integer
          readOnly: true
          example: 3
        created:
          description: 'The UNIX time value of the creation time'
          type: integer
          readOnly: true
          example: 1388552400
        updated_id:
          description: 'The unique ID of the person (user) who last updated this record'
          type: integer
          readOnly: true
          example: 3
        updated:
          description: 'The UNIX time value of the last update'
          type: integer
          readOnly: true
          example: 1388552400
      type: object
    extendedModelMeta:
      title: 'Extended Meta Model'
      properties:
        created_id:
          description: 'The unique ID of the person (user) who created this record'
          type: integer
          readOnly: true
          example: 3
        created:
          description: 'The UNIX time value of the creation time'
          type: integer
          readOnly: true
          example: 1388552400
        created_name:
          description: 'The full name of the person (user) who created this record'
          type: string
          readOnly: true
          example: 'John Smith'
        updated_id:
          description: 'The unique ID of the person (user) who last updated this record'
          type: integer
          readOnly: true
          example: 3
        updated:
          description: 'The UNIX time value of the last update'
          type: integer
          readOnly: true
          example: 1388552400
        updated_name:
          description: 'The full name of the person (user) who last updated this record'
          type: string
          readOnly: true
          example: 'John Smith'
      type: object
    meta:
      title: 'Page Meta Model'
      properties:
        total:
          type: integer
          example: 1
        count:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 1
        current_page:
          type: integer
          example: 1
      type: object
    pagination:
      title: 'Pagination Meta Model'
      properties:
        pagination:
          $ref: '#/components/schemas/meta'
      type: object
    success:
      title: 'Success Response'
      properties:
        success:
          properties:
            id:
              type: integer
              example: 1
          type: object
      type: object
    notFound:
      title: 'Not Found Response'
      description: 'Class OpenApi'
      properties:
        error:
          properties:
            code:
              description: 'The HTTP error code'
              type: integer
              example: '404'
            message:
              description: 'More detail on the error encountered'
              type: string
              example: 'Requested resource was not found'
          type: object
      type: object
    BillableItem:
      title: 'Billable Item Model'
      description: 'Standard billable item model'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Billable Item ID'
              type: integer
              example: 92834
            name:
              description: 'Name of the billable item'
              type: string
              example: 'Aspera Upload'
            description:
              description: 'Description of the billable item'
              type: string
              example: 'Upload to Aspera (per TB)'
            unit_name:
              description: 'Name of the unit this is charged as'
              type: string
              example: Terabyte
            buy_cost:
              description: 'Total cost to you of the billable item'
              type: integer
              format: float
              example: '10.00'
            sell_cost:
              description: 'Total cost to your customer of the billable item'
              type: integer
              format: float
              example: '20.00'
            taxes:
              type: array
              items:
                $ref: '#/components/schemas/InvoiceItemTaxes'
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldOnObject'
            currency:
              description: 'Currency code (three character format) that this invoice is in'
              type: string
              example: AUD
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    BillableItemOnObject:
      title: 'Billable Item On Object'
      description: ''
      required:
        - name
        - object_type
        - object_id
      properties:
        id:
          description: 'Automatically generated id'
          type: integer
          example: 2342354
        name:
          description: 'Name of the billable item'
          type: string
          example: 'NAS Storage'
        description:
          description: 'Brief description of the item'
          type: string
          example: 'Rented per TB, per month'
        cost:
          description: 'Individual unit cost charged to the client'
          type: integer
          format: float
          example: '25.23'
        buy_cost:
          description: 'Individual unit cost payed by this business'
          type: integer
          format: float
          example: '20'
        currency:
          description: 'Currency code (three character format)'
          type: string
          example: AUD
        quantity:
          description: 'Quantity of the item'
          type: integer
          format: float
          example: '4'
        total:
          description: 'Total, excluding taxes'
          type: integer
          format: float
          readOnly: true
          example: '100.92'
        buy_total:
          description: 'Buy Total, excluding taxes'
          type: integer
          format: float
          readOnly: true
          example: '80'
        object_type:
          description: 'Type of object this billable item is joined to'
          type: string
          enum:
            - bkg
          example: bkg
        object_id:
          description: 'ID of the object that this billable item is joined to'
          type: integer
          example: 239483
        billable_item_id:
          description: 'ID of the billable item (null if created adhoc)'
          type: integer
          example: 897832
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemTaxes'
      type: object
    BookingBillableItem:
      title: 'Billable Items on booking model'
      description: ''
      required:
        - name
      properties:
        id:
          description: 'Automatically generated id'
          type: integer
          example: 2342354
        name:
          description: 'Name of the billable item'
          type: string
          example: 'NAS Storage'
        description:
          description: 'Brief description of the item'
          type: string
          example: 'Rented per TB, per month'
        cost:
          description: 'Individual unit cost charged to the client'
          type: integer
          format: float
          example: '25.23'
        buy_cost:
          description: 'Individual unit cost payed by this business'
          type: integer
          format: float
          example: '20'
        currency:
          description: 'Currency code (three character format)'
          type: string
          example: AUD
        quantity:
          description: 'Quantity of the item'
          type: integer
          format: float
          example: '4'
        total:
          description: 'Total, excluding taxes'
          type: integer
          format: float
          readOnly: true
          example: '100.92'
        buy_total:
          description: 'Buy Total, excluding taxes'
          type: integer
          format: float
          readOnly: true
          example: '80'
        billable_item_id:
          description: 'ID of the billable item (null if created adhoc)'
          type: integer
          example: 897832
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemTaxes'
        create_new:
          description: 'Set to true to create a global billable item'
          type: boolean
          example: true
      type: object
    Booking:
      title: 'Booking Model'
      description: 'Standard booking model that returns most properties by default'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Booking ID'
              type: integer
              example: 1
            name:
              description: 'Booking Name'
              type: string
              example: 'Test Booking'
            start:
              description: 'Unix Timestamp of the booking start. Alternatively use `start_date_time_iso` which automatically calculates the unix timestamp.'
              type: integer
              example: 1547501100
            end:
              description: 'Unix timestamp of the booking end. Alternatively use `end_date_time_iso` which automatically calculates the unix timestamp.'
              type: integer
              example: 1547538900
            start_date_time_iso:
              description: 'ISO-8601 formatted result of the booking start'
              type: string
              example: '2022-02-22T09:00:00+11:00'
            end_date_time_iso:
              description: 'ISO-8601 formatted result of the booking end'
              type: string
              example: '2022-02-22T17:00:00+11:00'
            duration_min:
              description: 'Duration of booking in minutes'
              type: integer
              readOnly: true
              example: '480'
            all_day:
              description: 'Is the booking all day'
              type: boolean
              example: 'false'
            notes:
              description: 'Additional booking information'
              type: string
              example: 'Additional note'
            repeat_master:
              description: 'Is this booking designated as the master booking linked to repeats'
              type: boolean
              example: 'true'
            repeat_master_id:
              description: 'If this booking is a repeat, this is the id of the master booking'
              type: integer
              example: '0'
            repeat_rule:
              description: 'Specifically formatted rule for the repeat logic'
              type: string
              example: FREQ=daily;INTERVAL=2;REPENDTYPE=date;UNTIL=20220228T130000;
            resources:
              type: array
              items:
                $ref: '#/components/schemas/ResourceBooking'
            project:
              type: array
              items:
                $ref: '#/components/schemas/ProjectSummary'
            client:
              description: 'The client (either person or organization) attached to this booking'
              type: array
              items:
                $ref: '#/components/schemas/Client'
            status:
              type: array
              items:
                $ref: '#/components/schemas/StatusSummary'
            billable_items:
              type: array
              items:
                $ref: '#/components/schemas/BookingBillableItem'
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldOnObject'
          type: object
        -
          $ref: '#/components/schemas/extendedModelMeta'
    BookingCheckClashes:
      title: 'Booking Clash Model'
      description: 'Standard booking model that returns most properties by default'
      properties:
        id:
          description: 'Booking ID'
          type: integer
          example: 1
        name:
          description: 'Booking Name'
          type: string
          example: 'Test Booking'
        start:
          description: 'Unix Booking Start'
          type: integer
          example: 1547501100
        end:
          description: 'Unix Booking End'
          type: integer
          example: 1547538900
      type: object
    BookingSummary:
      title: 'Booking Summary Model'
      description: 'Standrd booking model summarised'
      properties:
        id:
          description: 'Booking ID'
          type: integer
          example: 1
        name:
          description: 'Booking Name'
          type: string
          example: 'Test Booking'
        start:
          description: 'Unix Booking Start'
          type: integer
          example: 1547501100
        end:
          description: 'Unix Booking End'
          type: integer
          example: 1547538900
        resources:
          type: array
          items:
            $ref: '#/components/schemas/TimeEntryBookingResource'
      type: object
    TimeEntryBookingResource:
      title: 'Time Entry Booking Resource Model'
      description: 'Resources added to a booking, within a Time Entry'
      properties:
        id:
          description: 'Automatically generated unique resource id'
          type: integer
          example: 9458
        name:
          description: 'Name of the resource'
          type: string
          readOnly: true
          example: 'Edit Suite 1'
      type: object
    BookingBulkEdit:
      title: 'Booking Bulk Edit Model'
      description: 'Allows bulk creation, modification and deletion of bookings'
      properties:
        save:
          description: 'Create new or update existing bookings (be sure to include an `external_id` column so we know which bookings to update'
          properties:
            common_properties:
              description: 'Define the parameters common across all bookings being saved'
              type: array
              items:
                properties:
                  calendar_subscription_id: { description: 'ID of calendar subscription to attach to each booking', type: integer, example: 234982 }
                  resources: { type: array, items: { properties: { id: { description: 'ID of the resource to attach to each booking', type: integer, example: 34982 } }, type: object } }
                  project: { type: array, items: { properties: { id: { description: 'ID of the project to attach to each booking', type: integer, example: 239909 } }, type: object } }
                  status: { type: array, items: { properties: { id: { description: 'ID of the status to attach to each booking', type: integer, example: 40123 } }, type: object } }
                  client: { type: array, items: { properties: { uuid: { description: 'UUID of the contact to attach to each booking', type: string, example: p209809 } }, type: object } }
                type: object
            columns:
              description: 'Define the columns that we are inserting. The order of these must be the order must match the `values` array.'
              type: array
              items:
                enum:
                  - external_id
                  - start
                  - end
                  - name
                  - notes
              example:
                - external_id
                - start
                - end
                - name
                - notes
            values:
              description: 'An array of values in the order defined in `columns` array.'
              type: array
              items:
                example:
                  - 1234j@kf9i094-090-9435aasdas
                  - 1685691600
                  - 1685695200
                  - 'Test Booking'
                  - 'Booking Notes'
          type: object
        delete:
          description: 'Delete existing bookings by either `id`, `external_id` or `calendar_subscription_id`'
          properties:
            id:
              type: array
              items:
                type: integer
                example: 98923
              example:
                - 98923
                - 19812
                - 23838
            external_id:
              type: array
              items:
                type: string
                example: 1234j@kf9i094-090-9435aasdas
              example:
                - 1234j@kf9i094-090-9435aasdas
            calendar_subscription_id:
              type: array
              items:
                type: integer
                example: 989232349
              example:
                - 989232349
          type: object
      type: object
    BookingLock:
      title: 'Booking Lock Model'
      description: 'Used to lock bookings whilst editing is in progress'
      properties:
        lock_created_id:
          description: 'The ID of the user who will obtain the lock'
          type: integer
          example: 23487
        lock_expire_date:
          description: 'UNIX timestamp of when the lock should end'
          type: integer
          example: 1647662376
      type: object
    CalendarSubscriptionImportModel:
      title: 'Calendar Subscription Import Model'
      description: 'External shared calendars that are imported into Sonderplan on a recurring schedule'
      properties:
        id:
          description: 'Automatically generated, unique calendar subscription id'
          type: integer
          readOnly: true
          example: 5693
        enabled:
          description: 'If enabled, Sonderplan will be regularly checking the external calendar for changes'
          type: boolean
          example: true
        booking_property:
          $ref: '#/components/schemas/CalendarSubscriptionImportBookingPropertiesModel'
        calendar_url:
          description: 'URL (link) to the external calendar subscription, usually a .ics file'
          type: string
          example: 'https://calendar.google.com/calendar/i'
        last_checked_filesize:
          description: 'File size (in bytes) of the calendar subscription when we last checked it'
          type: integer
          readOnly: true
          example: 9272
        last_checked_date:
          description: 'UNIX timestamp of the last time we checked the calendar feed'
          type: integer
          readOnly: true
          example: 1683342643
        last_parsed_date:
          description: 'UNIX timestamp of the last time we parsed the calendar feed'
          type: integer
          readOnly: true
          example: 1683342643
      type: object
    CalendarSubscriptionImportBookingPropertiesModel:
      title: 'Calendar Subscription Import Booking Properties'
      description: 'Bookings imported from the external calendar will have these properties added'
      properties:
        client:
          description: 'Booking Client'
          type: array
          items:
            $ref: '#/components/schemas/CalendarSubscriptionImportClientModel'
        status:
          description: 'Booking Status'
          type: array
          items:
            $ref: '#/components/schemas/CalendarSubscriptionImportBookingStatusModel'
        project:
          description: 'Booking Project'
          type: array
          items:
            $ref: '#/components/schemas/CalendarSubscriptionImportProjectModel'
        resources:
          description: 'Booking Resources'
          type: array
          items:
            $ref: '#/components/schemas/CalendarSubscriptionImportResourcesModel'
        custom_fields:
          description: 'Booking Custom Fields'
          type: array
          items:
            type: object
            additionalProperties: true
      type: object
    CalendarSubscriptionImportClientModel:
      title: 'Calendar Subscription Import Client Model'
      description: 'Client object for bookings imported from the external calendar'
      properties:
        uuid:
          description: 'Client UUID'
          type: string
          example: u2349
      type: object
    CalendarSubscriptionImportBookingStatusModel:
      title: 'Calendar Subscription Import Booking Status Model'
      description: 'Status object for bookings imported from the external calendar'
      properties:
        id:
          description: 'Status ID'
          type: integer
          example: 1
      type: object
    CalendarSubscriptionImportProjectModel:
      title: 'Calendar Subscription Import Project Model'
      description: 'Project object for bookings imported from the external calendar'
      properties:
        id:
          description: 'Project ID'
          type: integer
          example: 2
      type: object
    CalendarSubscriptionImportResourcesModel:
      title: 'Calendar Subscription Import Resources Model'
      description: 'Resources object for bookings imported from the external calendar'
      properties:
        id:
          description: 'Resource ID'
          type: integer
          example: 1928
      type: object
    Contact:
      title: 'Contact Model'
      description: 'The default contact schema'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Non unique, automatically generated contact identifier'
              type: integer
              readOnly: true
              example: 89420384
            uuid:
              description: 'Unique automatically generated contact universally unique identifier'
              type: string
              readOnly: true
              example: p89420384
            name:
              description: 'Full name of the contact'
              type: string
              example: 'Sam Smith'
            type:
              description: 'Type of the contact'
              type: string
              enum:
                - person
                - organization
              example: person
            linked_organization_id:
              description: 'The organization id that this contact has been added to. Applies only for ''person'' type contacts.'
              type: integer
              example: 137834
            linked_resource_id:
              description: 'The resource id that this contact has been added to. Applies only for ''person'' type contacts.'
              type: integer
              readOnly: true
              example: 237449
            client:
              description: 'If true, the contact will be selectable in client menus'
              type: boolean
              example: true
            user:
              description: 'If true, the contact is linked to a user. Hidden by default'
              type: boolean
              readOnly: true
              example: true
            resource:
              description: 'If true, the contact is linked to a resource. Hidden by default'
              type: boolean
              readOnly: true
              example: true
            email_1:
              description: 'Primary email address of the contact'
              type: string
              example: sam.smith@example.com
            email_2:
              description: 'Secondary email address of the contact'
              type: string
              example: sam.smith2@example.com
            email_3:
              description: 'Tertiary email address of the contact'
              type: string
              example: ''
            phone_1:
              description: 'Primary phone number of the contact'
              type: string
              example: +1-541-754-3010
            phone_2:
              description: 'Secondary phone number of the contact'
              type: string
              example: ''
            phone_3:
              description: 'Tertiary phone number of the contact'
              type: string
              example: ''
            address_line_1:
              description: 'Contacts address first line'
              type: string
              example: 'Unit 1/43'
            address_line_2:
              description: 'Contacts address second line'
              type: string
              example: '123 Example Street'
            address_line_3:
              description: 'Contacts address third line'
              type: string
              example: ''
            address_city:
              description: 'Contacts city'
              type: string
              example: 'Surry Hills'
            address_state:
              description: 'Contacts state'
              type: string
              example: NSW
            address_postcode:
              description: 'Contacts state'
              type: string
              example: '2010'
            address_country:
              description: 'Contacts country'
              type: string
              example: Australia
            website:
              description: 'Website of the contact'
              type: string
              example: www.example.com
            icon:
              description: 'Icon / avatar of the contact'
              type: object
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldOnObject'
          type: object
        -
          $ref: '#/components/schemas/extendedModelMeta'
    CustomField:
      title: 'Custom Field Model'
      description: 'The default custom field schema'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated custom field id'
              type: integer
              readOnly: true
              example: 8942
            name:
              description: 'Name of the custom field'
              type: string
              example: 'Booking Type'
            description:
              description: 'Description of the custom field, shown in the UI at the help icon'
              type: string
              example: 'Select the type of booking'
            type:
              description: 'The type of the custom field'
              type: string
              enum:
                - text
                - textarea
                - select
              example: select
            options:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldOption'
            module:
              description: 'The module that this custom field is linked to'
              type: string
              enum:
                - booking
                - project
                - people
                - organization
                - quote
                - invoice
                - quote_invoice
                - billable_item
              example: booking
            order:
              description: 'Relative order id of this field in relation to other custom fields in the same module'
              type: integer
              example: 3
            required:
              description: 'Marks this field as required, enforced by the API and UI'
              type: boolean
              example: true
            update_key:
              description: 'The update key to pass back when updating this field'
              type: string
              example: '2_1_8942'
              deprecated: true
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    CustomFieldOption:
      title: 'Custom Field Option Model'
      description: 'The default custom field option schema'
      properties:
        id:
          description: 'The ID of the custom field option'
          type: string
          example: '4934'
        name:
          description: 'The name of the custom field option'
          type: string
          example: 'Video Editing'
        order:
          description: 'The order of the custom field option'
          type: string
          example: '2'
      type: object
    CustomFieldOnObject:
      title: 'Custom Field Module Value'
      description: 'Used to show the values of custom fields on linked modules'
      properties:
        id:
          description: 'The ID of the custom field'
          type: integer
          example: 7823
        name:
          description: 'The name of the custom field'
          type: string
          example: Type
        value:
          description: 'The text value of the custom field, null if not defined'
          type: string
          example: 'Video Editing'
        value_id:
          description: 'The ID of the selected option, (applied only if the custom field is of type `select`)'
          type: integer
          example: 8973
        update_key:
          description: 'The update key to pass back when updating this field'
          type: string
          example: '2_1_7823'
          deprecated: true
      type: object
    FileSummary:
      title: 'File Summary Model'
      description: 'Simplified file model containing only a subset of fields'
      properties:
        id:
          description: 'Automatically generated File ID'
          type: integer
          readOnly: true
          example: 2342354
        name:
          description: 'Original file name'
          type: string
          example: Avid_Icon
        size:
          description: 'File size (in bytes)'
          type: integer
          example: 174285
        alias:
          description: 'Automatically generated file alias'
          type: string
          example: 7e73ab25155974c230d09494548201b9f5056ef
        extension:
          description: 'File extension'
          type: string
          example: png
        mime_type:
          description: 'File mime type'
          type: string
          example: image/png
      type: object
    Group:
      title: 'Group Model'
      description: 'Standard group model that returns all properties by default'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated, unique group id'
              type: integer
              readOnly: true
              example: 5693
            name:
              description: 'Name of the group'
              type: string
              example: 'Video Editors'
            description:
              description: 'Description about the group'
              type: string
              example: 'Full schedule access, limited project access'
            is_default:
              description: 'If true, this is a system group that cannot be edited'
              type: boolean
              readOnly: true
              example: true
            members:
              description: 'If true, this is a system group that cannot be edited'
              type: array
              items:
                $ref: '#/components/schemas/GroupUser'
            acl_schedule:
              description: 'Access level to the Schedule module'
              type: string
              enum:
                - '--'
                - R-
                - RW
              example: R-
            acl_project:
              description: 'Access level to the Project module'
              type: string
              enum:
                - '--'
                - R-
                - RW
              example: R-
            acl_task:
              description: 'Access level to the Task module'
              type: string
              enum:
                - '--'
                - R-
                - RW
              example: R-
            acl_finance:
              description: 'Access level to the Finance module'
              type: string
              enum:
                - '--'
                - R-
                - RW
              example: R-
            acl_report:
              description: 'Access level to the Report module'
              type: string
              enum:
                - '--'
                - R-
                - RW
              example: R-
            acl_contact:
              description: 'Access level to the Contact module'
              type: string
              enum:
                - '--'
                - R-
                - RW
              example: R-
            acl_admin:
              description: 'Access level to the Admin module'
              type: string
              enum:
                - '--'
                - R-
                - RW
              example: R-
            acl_account:
              description: 'Access level to the Account module'
              type: string
              enum:
                - '--'
                - R-
                - RW
              example: R-
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    InvoiceModel:
      title: 'Invoice Model'
      description: 'Standard invoice model that returns most properties by default'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated unique invoice id'
              type: integer
              example: 1
            prefix:
              description: 'Prefix to the invoice number'
              type: string
              example: INV-
            number:
              description: 'Number of the invoice'
              type: integer
              example: 892
            date:
              description: 'Unix time of the invoice date'
              type: integer
              example: 1547501100
            date_time_iso:
              description: 'ISO-8601 formatted result of the invoice date'
              type: string
              example: '2022-02-22T09:00:00+11:00'
            due_date:
              description: 'Unix time of the invoice due date'
              type: integer
              example: 1547501100
            due_date_time_iso:
              description: 'ISO-8601 formatted result of the invoice due date'
              type: string
              example: '2022-02-22T09:00:00+11:00'
            items:
              type: array
              items:
                $ref: '#/components/schemas/InvoiceItem'
            groups:
              type: array
              items:
                $ref: '#/components/schemas/InvoiceItemGroups'
            status:
              type: array
              items:
                $ref: '#/components/schemas/InvoiceStatus'
            project:
              type: array
              items:
                $ref: '#/components/schemas/ProjectSummary'
            client:
              type: array
              items:
                $ref: '#/components/schemas/Client'
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldOnObject'
            terms:
              description: 'Specific terms for this invoice'
              type: string
              example: 'Payment to be made in 30 days'
            template_id:
              description: 'The template id selected for this invoice, 0 = Default or no template'
              type: integer
              example: 213
            cloned_id:
              description: 'The id of the quote or invoice that this was duplicated from'
              type: integer
              example: 545647
            reference:
              description: 'Text reference to a quote, invoice or purchase order'
              type: string
              example: QU-9893
            currency:
              description: 'Currency code (three character format) that this invoice is in'
              type: string
              example: AUD
            sub_total:
              description: 'Total of all invoice items before tax and discounts are applied'
              type: integer
              format: float
              readOnly: true
              example: '1289.29'
            discount_total:
              description: 'Total amount discounted from the invoice'
              type: integer
              format: float
              readOnly: true
              example: '872.98'
            net_total:
              description: 'Subtotal minus any discounts'
              type: integer
              format: float
              readOnly: true
              example: '416.31'
            tax_total:
              description: 'The amount of tax charged on the invoice'
              type: integer
              format: float
              readOnly: true
              example: '129.87'
            total:
              description: 'The grand total (net + tax) of the invoice'
              type: integer
              format: float
              readOnly: true
              example: '546.18'
            created_sp_flag:
              description: 'True if this invoice was created in Sonderplan'
              type: boolean
              example: 'true'
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    InvoiceStatus:
      title: 'Invoice Status Model'
      description: 'Invoice specific status model'
      properties:
        id:
          description: '1 = Draft, 2 = Submitted, 3 = Awaiting Payment, 4 = Paid'
          type: integer
          example: 2
        name:
          description: 'The name of the status'
          type: string
          readOnly: true
          example: Submitted
      type: object
    QuoteModel:
      title: 'Quote Model'
      description: 'Standard quote model that returns most properties by default'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated unique quote id'
              type: integer
              example: 1
            prefix:
              description: 'Prefix to the quote number'
              type: string
              example: INV-
            number:
              description: 'Number of the quote'
              type: integer
              example: 892
            date:
              description: 'Unix time of the quote date'
              type: integer
              example: 1547501100
            date_time_iso:
              description: 'ISO-8601 formatted result of the quote date'
              type: string
              example: '2022-02-22T09:00:00+11:00'
            expiry_date:
              description: 'Unix time of the quote expiry date'
              type: integer
              example: 1547501100
            expiry_date_time_iso:
              description: 'ISO-8601 formatted result of the quote expiry date'
              type: string
              example: '2022-02-22T09:00:00+11:00'
            items:
              type: array
              items:
                $ref: '#/components/schemas/InvoiceItem'
            groups:
              type: array
              items:
                $ref: '#/components/schemas/InvoiceItemGroups'
            status:
              type: array
              items:
                $ref: '#/components/schemas/QuoteStatus'
            project:
              type: array
              items:
                $ref: '#/components/schemas/ProjectSummary'
            client:
              type: array
              items:
                $ref: '#/components/schemas/Client'
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldOnObject'
            terms:
              description: 'Specific terms for this quote'
              type: string
              example: 'Expires in 30 days, subject to stock confirmation etc'
            template_id:
              description: 'The template id selected for this quote, 0 = Default or no template'
              type: integer
              example: 213
            cloned_id:
              description: 'The id of the quote or invoice that this was duplicated from'
              type: integer
              example: 545647
            reference:
              description: 'Text reference to a quote, invoice or purchase order'
              type: string
              example: QU-9893
            currency:
              description: 'Currency code (three character format) that this quote is in'
              type: string
              example: AUD
            sub_total:
              description: 'Total of all quote items before tax and discounts are applied'
              type: integer
              format: float
              readOnly: true
              example: '1289.29'
            discount_total:
              description: 'Total amount discounted from the quote'
              type: integer
              format: float
              readOnly: true
              example: '872.98'
            net_total:
              description: 'Subtotal minus any discounts'
              type: integer
              format: float
              readOnly: true
              example: '416.31'
            tax_total:
              description: 'The amount of tax charged on the quote'
              type: integer
              format: float
              readOnly: true
              example: '129.87'
            total:
              description: 'The grand total (net + tax) of the quote'
              type: integer
              format: float
              readOnly: true
              example: '546.18'
            created_sp_flag:
              description: 'True if this quote was created in Sonderplan'
              type: boolean
              example: 'true'
          type: object
        -
          $ref: '#/components/schemas/extendedModelMeta'
    QuoteStatus:
      title: 'Quote Status Model'
      description: 'Quote specific status model'
      properties:
        id:
          description: '1 = Draft, 2 = Sent, 3 = Accepted, 4 = Invoiced, 5 = Declined'
          type: integer
          example: 2
        name:
          description: 'The name of the status'
          type: string
          readOnly: true
          example: Sent
      type: object
    InvoiceItem:
      title: 'Invoice Item Model'
      description: 'Standard invoice item model that returns all properties by default'
      properties:
        id:
          description: 'Automatically generated unique item id'
          type: integer
          example: 982342
        item_text:
          description: 'Item title text'
          type: string
          example: 'Edit Suite 1 Grading'
        item_uuid:
          description: 'The unique ID of the item in string format, with `r` prefix for resource, `b` prefix for billable item and `s` for service'
          type: string
          example: r2394
        ratescheme_id:
          description: 'Unique ID of the rate scheme that populated this invoice item'
          type: integer
          example: 989234
        description:
          description: 'Item description text'
          type: string
          example: 'Session booked between 10th Jan -> 12th Jan 2023'
        quantity:
          description: 'The amount of items billed for'
          type: number
          format: float
          example: '2.4'
        unit:
          description: 'The unit that this item is charging by'
          type: string
          example: hourly
        unit_amount:
          description: 'Individual unit cost charged to the client for this item'
          type: number
          format: float
          example: '20.65'
        unit_buy_amount:
          description: 'Individual unit cost payed by this business for this item'
          type: number
          format: float
          example: '10.15'
        tax:
          description: 'Legacy option showing if the tax defined within the invoice was applied to this invoice'
          type: boolean
          deprecated: true
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemTaxes'
        discount:
          description: 'Discount amount that applies to this item. Suffix with a % symbol to make this a percentage discount'
          type: string
          example: 20.00%
        total:
          description: 'Total amount after discount'
          type: number
          format: float
          readOnly: true
          example: '495.00'
        buy_total:
          description: 'Total buy amount'
          type: number
          format: float
          example: '200.00'
        buy_total_fixed:
          description: 'Is the buy_total a fixed amount'
          type: boolean
          example: false
        order:
          description: 'Zero indexed order integer'
          type: integer
          example: 2
        parent_group_id:
          description: 'Id of the group that this item is within'
          type: integer
          example: 234842
      type: object
    InvoiceItemTaxes:
      title: 'Invoice Item Taxes'
      description: 'Standard invoice item taxes model that returns tax information'
      properties:
        id:
          description: 'Unique id of the tax applied'
          type: integer
          example: 3247
        name:
          description: 'Name of the tax'
          type: string
          example: GST
        rate:
          description: 'Rate of the tax'
          type: string
          example: '10.00'
        total:
          description: 'Total amount of tax'
          type: string
          format: float
          example: '151.00'
      type: object
    InvoiceItemGroups:
      title: 'Invoice Item Groups'
      description: 'Standard invoice item groups model that returns all properties by default'
      properties:
        id:
          description: 'Automatically generated unique item id'
          type: integer
          example: 23425
        name:
          description: 'Name given to the item group'
          type: string
          example: 'Video Editing Services'
        description:
          description: 'Description given to the item group'
          type: string
          example: 'Includes all editing services'
        order:
          description: 'Zero indexed order integer of relative position amongst other items and groups'
          type: integer
          example: 2
        hide_items:
          description: 'If true, items within this group will not be shown on Print and PDF exports'
          type: boolean
      type: object
    InvoiceTemplate:
      title: 'Invoice Template Model'
      description: ''
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated, unique invoice template id'
              type: integer
              readOnly: true
              example: 5693
            name:
              description: 'Name of the Invoice Template'
              type: string
              example: 'Long Form Jobs'
            type_id:
              description: '1 = Invoice, 2 = Quote'
              type: integer
              example: 1
            default:
              description: 'Sets the default template used when creating an invoice'
              type: boolean
              example: false
            title:
              description: 'Text shown in the top left hand corner of the template'
              type: string
              example: Invoice
            logo:
              type: array
              items:
                $ref: '#/components/schemas/FileSummary'
            top_left_container:
              description: 'Top left grid container content'
              type: string
            top_center_container:
              description: 'Top center grid container content'
              type: string
            top_right_container:
              description: 'Top right grid container content'
              type: string
            middle_left_container:
              description: 'Middle left grid container content'
              type: string
            middle_center_container:
              description: 'Middle center grid container content'
              type: string
            middle_right_container:
              description: 'Middle right grid container content'
              type: string
            bottom_left_container:
              description: 'Bottom left grid container content'
              type: string
            bottom_center_container:
              description: 'Bottom center grid container content'
              type: string
            bottom_right_container:
              description: 'Bottom right grid container content'
              type: string
            email_subject_template:
              description: 'Template used to populate the email subject line'
              type: string
            email_body_template:
              description: 'Template used to populate the email body'
              type: string
            options:
              description: 'Additional options and settings that apply to this invoice template'
              properties:
                items_column_visibility:
                  description: 'Lists item columns visibility status'
                  properties: { item: { description: 'Item column visibility', type: boolean }, description: { description: 'Item description column visibility', type: boolean }, quantity: { description: 'Item quantity column visibility', type: boolean }, price: { description: 'Item price column visibility', type: boolean }, discount: { description: 'Item discount column visibility', type: boolean }, tax: { description: 'Item tax column visibility', type: boolean }, total: { description: 'Item total column visibility', type: boolean } }
                  type: object
                totals_visibility:
                  description: 'Lists total rows visibility status'
                  properties: { sub_total: { description: 'Sub total row visibility', type: boolean }, discount_total: { description: 'Total discount row visibility', type: boolean }, net_total: { description: 'Net total row visibility', type: boolean }, tax_total: { description: 'Total tax row visibility', type: boolean }, total: { description: 'Total row visibility', type: boolean } }
                  type: object
              type: object
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    Log:
      title: 'Log Model'
      description: 'Log model'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'The automatically generated id of the log entry'
              type: integer
              readOnly: true
              example: 1
            module:
              description: 'The module that this log entry is assigned to'
              type: string
              readOnly: true
              example: booking
            record_id:
              description: 'The id of the record that this log entry is assigned to'
              type: integer
              readOnly: true
              example: 37382924
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    Project:
      title: 'Project Model'
      description: 'The default project schema which contains the majority of these fields'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated Project ID'
              type: integer
              readOnly: true
              example: 2342354
            name:
              description: 'Title of the project'
              type: string
              example: 'Andor S1 EP7 Annoucement'
            code:
              description: 'Short code used to identify the project'
              type: string
              example: AND-S1-EP7
            description:
              description: 'A short description or synopsis of the project'
              type: string
              example: 'Colonel Yularen announces that the ISB has gained more surveillance and punitive authority, while Meero is challenged by Blevin for breaking protocol by accessing Imperial data without authorization.'
            status_id:
              description: 'Project Status ID'
              type: integer
              writeOnly: true
              example: 1
            status:
              type: array
              items:
                $ref: '#/components/schemas/StatusSummary'
            private:
              description: 'Is the project viewable to everyone, or just the users and groups assigned'
              type: boolean
              example: 0
            parent_folder_id:
              description: 'The ID of the folder that this project is sitting in'
              type: integer
              example: 5
            color_background:
              description: 'Hex color value of the background'
              type: string
              example: '#B0A7F1'
            color_text:
              description: 'Hex color value of the text'
              type: string
              example: '#000000'
            client_id:
              description: 'The ID of the client prefixed by either p (for person) or o (for organization)'
              type: string
              writeOnly: true
              example: p23987
            client:
              description: 'The client (either person or organization) attached to this project'
              type: array
              items:
                $ref: '#/components/schemas/Client'
            custom_fields:
              type: array
              items:
                $ref: '#/components/schemas/CustomFieldOnObject'
            people:
              description: 'The users and groups assigned to this project. Also contains information regarding project admin status and role information'
              properties:
                users:
                  type: array
                  items: { $ref: '#/components/schemas/ProjectUser' }
              type: object
            time_entries:
              type: array
              items:
                $ref: '#/components/schemas/ProjectTimeEntries'
          type: object
        -
          $ref: '#/components/schemas/extendedModelMeta'
    ProjectSummary:
      title: 'Project Summary Model'
      description: 'Simplified project model containing only a subset of fields'
      properties:
        id:
          description: 'Automatically generated Project ID'
          type: integer
          example: 2342354
        name:
          description: 'Title of the project'
          type: string
          readOnly: true
          example: 'Andor S1 EP7 Annoucement'
        code:
          description: 'Short code used to identify the project'
          type: string
          readOnly: true
          example: AND-S1-EP7
        description:
          description: 'A short description or synopsis of the project'
          type: string
          readOnly: true
          example: 'Colonel Yularen announces that the ISB has gained more surveillance and punitive authority, while Meero is challenged by Blevin for breaking protocol by accessing Imperial data without authorization.'
        status_id:
          description: 'Project Status ID'
          type: integer
          readOnly: true
          example: 1
      type: object
    ProjectFolder:
      title: 'Project Folder Model'
      description: 'Returns the fields relevant to project folders'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated project folder ID'
              type: integer
              readOnly: true
              example: 2345
            name:
              description: 'Folder Name'
              type: string
              example: 'Andor Season One'
            parent_folder_id:
              description: 'The ID of the folder that this project is sitting in'
              type: integer
              example: 5
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    ProjectPhase:
      title: 'Project Phase Model'
      description: 'The default project phase schema which contains all of these fields'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated project phase ID'
              type: integer
              readOnly: true
              example: 20293
            name:
              description: 'Name of the project phase'
              type: string
              example: 'Deliverables due to client'
            project_id:
              description: 'ID of the project that this phase is linked to'
              type: integer
              example: 2776
            type_id:
              description: '1 = Project Phase, 2 = Project Milestone'
              type: integer
              example: 2
            start:
              description: 'UNIX time of the start of the phase'
              type: integer
              example: 1669802192
            end:
              description: 'UNIX end of the start of the phase'
              type: integer
              example: 1670234192
            color_background:
              description: 'A hex color value of the background of this phase'
              type: string
              example: '#B0A7F1'
            color_text:
              description: 'A hex color value of the text of this phase'
              type: string
              example: '#000000'
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    RateScheme:
      title: 'Rate Scheme Model'
      description: 'Standard rate scheme model that returns all properties by default'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated, unique rate scheme id'
              type: integer
              readOnly: true
              example: 13409
            name:
              description: 'Name of the rate scheme'
              type: string
              example: 'Sydney Grading Suites Standard Rates'
            type_id:
              description: '`1` = Service Rate, `2` = Seasonal Adjustment (Deprecated), `3` = Hourly Adjustment (Deprecated), `4` = Client Rate, `5` = Advanced Adjustment (Deprecated), `6` = Project Rate, `7` = Overtime Adjustment (Deprecated), `8` = Custom Field Option Adjustment (Deprecated), `9` = Resource Base, `10` = Resource Weekend, `11` = Resource Public Holiday'
              type: integer
              example: 1
            description:
              description: 'General information about the rate scheme'
              type: string
              example: 'Standard rates for grading suites located in Sydney'
            booking_description_template:
              description: 'Template used for quote/invoice line item descriptions when prefilled from a booking'
              type: string
              example: "[rateSchemeName] - [rateSchemeDescription]\n    [bookingName] - [rateSchemeStartDateCode]|(D jS M Y g:iA) --> [rateSchemeEndDateCode]|(D jS M Y g:iA)"
            resources:
              description: 'Resources that this rate scheme is scoped to'
              type: array
              items:
                $ref: '#/components/schemas/ResourceSummary'
            hour_rate:
              description: 'Amount chargable hourly'
              type: integer
              format: float
              example: '124.20'
            hour_buy_rate:
              description: 'Amount payable hourly'
              type: integer
              format: float
              example: '90.00'
            hour_rate_percent:
              description: 'Hourly rate is percentage based'
              type: boolean
              deprecated: true
            day_rate:
              description: 'Amount chargable daily'
              type: integer
              format: float
              example: '1200.00'
            day_buy_rate:
              description: 'Amount payable daily'
              type: integer
              format: float
              example: '800.00'
            day_rate_percent:
              description: 'Daily rate is percentage based'
              type: boolean
              deprecated: true
            week_rate:
              description: 'Amount chargable weekly'
              type: integer
              format: float
              example: '5000.00'
            week_buy_rate:
              description: 'Amount payable weekly'
              type: integer
              format: float
              example: '2100.00'
            fixed_date:
              description: 'True if the rate scheme does not recur every year'
              type: boolean
              deprecated: true
            date_start:
              description: 'Date this rate scheme will begin applying, in `YYYY-MM-DD` format'
              type: string
            date_end:
              description: 'Date this rate scheme will cease applying, in `YYYY-MM-DD` format'
              type: string
            time_start:
              description: 'Time this rate scheme will begin applying, in `00:00:00` format'
              type: string
              deprecated: true
            time_end:
              description: 'Time this rate scheme will cease applying, in `00:00:00` format'
              type: string
              deprecated: true
            overtime_hours:
              description: 'Number of hours of booking before overtime rate is applicable'
              type: integer
              format: float
            override_base:
              description: 'If true, other base rates will be replaced with this one'
              type: boolean
              deprecated: true
            default_unit:
              description: '`0` = Hourly, `1` = Daily'
              type: integer
              deprecated: true
            default_tax:
              description: '`0` = Dont Apply Tax, `1` = Apply Tax'
              type: integer
              deprecated: true
            taxes:
              type: array
              items:
                $ref: '#/components/schemas/InvoiceItemTaxes'
            currency:
              description: 'Currency code (three character format)'
              type: string
              example: AUD
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    SingleResourceRate:
      title: 'Single Resource Rate'
      description: 'Single resource rate model'
      properties:
        id:
          description: 'Automatically generated unique rate id'
          type: integer
          example: 9458
        type_id:
          description: '9 = Base, 10 = Weekend, 11 = Public Holiday'
          type: integer
          example: 9
        hour_buy_cost:
          description: 'The buy cost of this resource, per hour'
          type: integer
          format: float
          example: 62.2
        hour_sell_cost:
          description: 'The sell cost of this resource, per hour'
          type: integer
          format: float
          example: 100
        day_buy_cost:
          description: 'The buy cost of this resource, per day'
          type: integer
          format: float
          example: 560
        day_sell_cost:
          description: 'The sell cost of this resource, per day'
          type: integer
          format: float
          example: 1000
        week_buy_cost:
          description: 'The buy cost of this resource, per week'
          type: integer
          format: float
          example: 1000
        week_sell_cost:
          description: 'The sell cost of this resource, per week'
          type: integer
          format: float
          example: 3500
        date_start:
          description: 'Date start of this rate in YYYY-MM-DD format'
          type: string
          example: '2023-01-01'
        date_end:
          description: 'Date end of this rate in YYYY-MM-DD format'
          type: string
          example: '2023-12-31'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItemTaxes'
        currency:
          description: 'Currency code (three character format)'
          type: string
          example: AUD
      type: object
    Resource:
      title: 'Resource Model'
      description: 'Resource model'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated unique resource id'
              type: integer
              readOnly: true
              example: 9458
            name:
              description: 'Name of the resource'
              type: string
              example: 'Edit Suite 1'
            description:
              description: 'Additional info about the resource'
              type: string
              example: 'Sydney Office, Level 2'
            type_id:
              description: '1 = Room, 2 = Person, 3 = Equipment, 4 = Resource Group, 5 = Action'
              type: integer
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
              example: 1
            type_person_id:
              description: 'Unique id of the person (only applies if this resource is a person)'
              type: integer
              example: 0
            parent_id:
              description: 'Unique id of the resource group that this resource is a child of'
              type: integer
              example: 2908
            order:
              description: 'Order of the resource in relation to other resources in the same group'
              type: integer
              example: 4
            feed:
              description: 'iCalendar calendar feed URL. Contains all bookings that are booked to this resource'
              type: string
              example: /feed/resource/0d17a654166d49a4337b65256...
            icon:
              type: array
              items:
                $ref: '#/components/schemas/FileSummary'
            schedules:
              type: array
              items:
                $ref: '#/components/schemas/ScheduleSummary'
            rates:
              description: 'Optional. Specify in the field parameter to return'
              type: array
              items:
                $ref: '#/components/schemas/SingleResourceRate'
            color_background:
              description: 'Hex color value of the background'
              type: string
              example: '#B0A7F1'
            color_text:
              description: 'Hex color value of the text'
              type: string
              example: '#000000'
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    ResourceBooking:
      title: 'Resource Booking Model'
      description: 'Resources added to a booking'
      properties:
        id:
          description: 'Automatically generated unique resource id'
          type: integer
          example: 9458
        name:
          description: 'Name of the resource'
          type: string
          readOnly: true
          example: 'Edit Suite 1'
        description:
          description: 'Additional info about the resource'
          type: string
          readOnly: true
          example: 'Sydney Office, Level 2'
        type_id:
          description: '1 = Room, 2 = Person, 3 = Equipment, 4 = Resource Group, 5 = Action'
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          readOnly: true
          example: 1
        type_person_id:
          description: 'Unique id of the person (only applies if this resource is a person)'
          type: integer
          readOnly: true
          example: 0
        updated:
          description: 'The UNIX time value of the last update'
          type: integer
          readOnly: true
          example: 1388552400
        parent_id:
          description: 'The id of the resource group that is the parent of this resource'
          type: integer
          readOnly: true
          example: 99472
        parent_name:
          description: 'The name of the resource group that is the parent of this resource. Only appears when `resource_parent` is supplied as `true` as a query parameter'
          type: string
          readOnly: true
          example: 'Edit Suites'
        icon:
          description: 'Only appears when `resource_icon` is supplied as `true` as a query parameter'
          type: array
          items:
            $ref: '#/components/schemas/FileSummary'
          readOnly: true
        rates:
          description: 'Only appears when `resource_rates` is supplied as `true` as a query parameter'
          type: array
          items:
            $ref: '#/components/schemas/BookingResourceRates'
        time_entries:
          description: 'Only appears when `resource_time_entries` is supplied as `true` as a query parameter'
          type: array
          items:
            $ref: '#/components/schemas/BookingResourceTimeEntry'
      type: object
    BookingResourceRates:
      title: 'Booking Resource Rates Model'
      description: 'The rates associated with a resource for a booking'
      properties:
        rate_scheme_id:
          description: 'The ID (if applicable) of the rate scheme used to populate this rate'
          type: integer
          example: 984312
        rate_scheme_name:
          description: 'The name of the rate scheme used to populate this rate'
          type: integer
          example: 'Resource Rate'
        currency:
          description: 'Currency code (three character format)'
          type: string
          example: AUD
        buy:
          description: 'Contains the properties related to buy expenses'
          properties:
            unit:
              description: 'Unit of the buy outgoing'
              type: string
              enum:
                - hourly
                - daily
                - fixed
                - auto
              example: hourly
            unit_amount:
              description: 'Unit cost of the buy outgoing'
              type: number
              format: float
              example: '20.65'
            quantity:
              description: 'The quantity of the unit'
              type: number
              format: float
              example: '2.4'
            discount:
              description: 'Discount amount that applies to this item. Suffix with a % symbol to make this a percentage discount'
              type: string
              example: 20.00%
          type: object
        sell:
          description: 'Contains the properties related to sell expenses'
          properties:
            unit:
              description: 'Unit of the sell incoming'
              type: string
              enum:
                - hourly
                - daily
                - fixed
                - auto
              example: hourly
            unit_amount:
              description: 'Unit cost of the sell incoming'
              type: number
              format: float
              example: '20.65'
            quantity:
              description: 'The quantity of the unit'
              type: number
              format: float
              example: '2.4'
            discount:
              description: 'Discount amount that applies to this item. Suffix with a % symbol to make this a percentage discount'
              type: string
              example: 20.00%
          type: object
      type: object
    BookingResourceTimeLogs:
      title: 'Booking Resource Time Log Model'
      description: 'Time logs associated with a resource for a booking'
      properties:
        time_entries:
          type: array
          items:
            $ref: '#/components/schemas/BookingResourceTimeEntry'
      type: object
    ResourceSummary:
      title: 'Resource Summary Model'
      description: 'Resource model summarised'
      properties:
        id:
          description: 'Automatically generated unique resource id'
          type: integer
          readOnly: true
          example: 9458
        name:
          description: 'Name of the resource'
          type: string
          example: 'Edit Suite 1'
        description:
          description: 'Additional info about the resource'
          type: string
          example: 'Sydney Office, Level 2'
        type_id:
          description: '1 = Room, 2 = Person, 3 = Equipment, 4 = Resource Group, 5 = Action'
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          example: 1
        type_person_id:
          description: 'Unique id of the person (only applies if this resource is a person)'
          type: integer
          example: 0
        parent_id:
          description: 'Unique id of the resource group that this resource is a child of'
          type: integer
          example: 2908
        parent_name:
          description: 'Name of the parent'
          type: string
          example: Cameras
        updated:
          description: 'The UNIX time value of the last update'
          type: integer
          readOnly: true
          example: 1388552400
        icon:
          type: array
          items:
            $ref: '#/components/schemas/FileSummary'
      type: object
    Schedule:
      title: 'Schedule Model'
      description: 'Schedule model'
      properties:
        id:
          description: 'Automatically generated unique schedule id'
          type: integer
          example: 9458
        name:
          description: 'Name of the schedule'
          type: string
          example: 'Sydney Studio'
        description:
          description: 'Additional info about the schedule'
          type: string
          example: 'Sydney Office, Level 2'
        resources:
          description: 'The resources that have been assigned to the schedule'
          type: array
          items:
            $ref: '#/components/schemas/ResourceSummary'
        access:
          description: 'The users and groups who have been given access to the schedule'
          type: array
          items:
            $ref: '#/components/schemas/AccessSummary'
        feed:
          description: 'iCalendar subscription feed URL (if enabled)'
          type: string
        working_week:
          description: 'Identifer of one of the following predefined working week templates. `0` = Monday -> Friday (Saturday / Sunday), `1` = Monday -> Saturday (Sunday), `2` = Saturday -> Thursday (Friday), `3` = Sunday -> Thursday (Friday / Saturday)'
          type: integer
          example: 3
        country_region:
          description: 'Identifier of the country / state that public holidays should be loaded for. Only required if `show_public_holiday` = `true`'
          type: string
          example: AU-NSW
        show_public_holiday:
          description: 'Should public holidays be loaded on the schedule'
          type: boolean
          example: true
      type: object
    ScheduleSummary:
      title: 'Schedule Summary Model'
      description: 'Schedule model summarised'
      properties:
        id:
          description: 'Automatically generated unique schedule id'
          type: integer
          example: 9458
        name:
          description: 'Name of the schedule'
          type: string
          example: 'Sydney Studio'
        description:
          description: 'Additional info about the schedule'
          type: string
          example: 'Sydney Office, Level 2'
      type: object
    Status:
      title: 'Status Model'
      description: 'Status model'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'The status id of the bookings/project selected status'
              type: integer
              readOnly: true
              example: 1
            name:
              description: 'The status name'
              type: string
              example: Confirmed
            description:
              description: 'Description of what the status represents'
              type: string
              example: 'The confirmed status'
            type_id:
              description: 'Status type: 1 = Booking, 2 = Project (Future Use)'
              type: integer
              example: 1
            notification:
              description: 'Are booking notifications triggered when this status is selected'
              type: boolean
              example: true
            order:
              description: 'Specify the order of the status with an integer in ascending order'
              type: integer
              example: 3
            color_background:
              description: 'A hex color value of the background of this project'
              type: string
              example: '#B0A7F1'
            color_text:
              description: 'A hex color value of the text of this project'
              type: string
              example: '#000000'
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    StatusSummary:
      title: 'Status Summary Model'
      description: 'A simplified version of the complete Status Model'
      properties:
        id:
          description: 'Automatically generated unique identifier of the status'
          type: integer
          readOnly: true
          example: 2
        name:
          description: 'The name of the status'
          type: string
          example: 'Second Hold'
        description:
          description: 'Description of the status'
          type: string
          example: 'Has second priority if the first hold cancels'
        notification:
          description: 'Determines if notifications are sent if this status is selected'
          type: boolean
          example: true
      type: object
    Tax:
      title: 'Tax Model'
      description: 'Standard tax model that returns all properties by default'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated, unique tax id'
              type: integer
              readOnly: true
              example: 5693
            name:
              description: 'Name of the Tax'
              type: string
              example: GST
            rate:
              description: 'Tax Rate in decimal format (0 -> 100)'
              type: number
              format: float
              example: '10'
            code:
              description: 'An external number or code that identifes this tax'
              type: string
              example: 'CAP: Capital Purchase'
            compound:
              description: 'Compound taxes are calculated on top of primary taxes'
              type: boolean
              example: false
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    Instance:
      title: 'Instance Model'
      description: 'Instance model'
      type: object
      allOf:
        -
          properties:
            name:
              description: 'Company name of the tenant, used in emails to identify the account holder'
              type: string
              example: 'Smith Post Production'
            domain:
              description: 'The primary domain registered to this account'
              type: string
              readOnly: true
              example: test.sonderplan.com
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    TimeActivity:
      title: 'Time Activity Model'
      description: 'Stores time activies used within time entries'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated, unique time activity id that will be referenced by time entries'
              type: integer
              readOnly: true
              example: 9879871
            name:
              description: 'Name of the activity'
              type: string
              example: 'Sound Post'
            description:
              description: 'Description of the scope of the activity'
              type: string
              example: 'Recording, mixing and exporting from Pro Tools and other DAWs'
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    TimeEntry:
      title: 'Time Entry Model'
      description: 'Stores time entries on bookings and projects'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated, unique time entry id'
              type: integer
              readOnly: true
              example: 9879871
            owner_id:
              description: 'ID of the user that owns this time entry'
              type: integer
              example: 872383
            owner:
              description: 'User that owns this time entry'
              properties:
                id:
                  type: integer
                  readOnly: true
                  example: 4
                first_name:
                  type: string
                  example: Jane
                last_name:
                  type: string
                  example: Smith
                primary_email:
                  type: string
                  example: jane.smith@example.com
                icon:
                  description: 'Icon / Avatar of the user'
                  properties: { id: { description: 'Unique ID of the file related to the icon', type: integer, example: 2390323 }, name: { description: 'Name of the file', type: string, example: SCR-20250220-jnua }, alias: { description: 'Unique String alias of the file', type: string, example: 030fb130bdf3c6cd5fa533fabb26fc9d90b66542cd343a318b2bfe5474923f90 }, extension: { description: 'File extension of the original uploaded file', type: string, example: jpeg }, mime_type: { description: 'Detected mime type of the original uploaded file', type: string, example: image/jpeg } }
                  type: object
              type: object
            name:
              description: 'Name of the activity that is being worked on'
              type: string
              example: 'Colour Grading'
            description:
              description: 'Short description or notes about what was worked on'
              type: string
              example: 'Opening scenes completed'
            start:
              description: 'Unix Time Entry Start'
              type: integer
              example: 1547501100
            end:
              description: 'Unix Time Entry End'
              type: integer
              example: 1547538900
            start_date_time_iso:
              description: 'ISO-8601 formatted result of the time entry start'
              type: string
              example: '2022-02-22T09:00:00+11:00'
            end_date_time_iso:
              description: 'ISO-8601 formatted result of the time entry end'
              type: string
              example: '2022-02-22T17:00:00+11:00'
            duration_sec:
              description: 'Duration of time entry in seconds'
              type: integer
              readOnly: true
              example: '3600'
            project:
              type: array
              items:
                $ref: '#/components/schemas/ProjectSummary'
            booking:
              type: array
              items:
                $ref: '#/components/schemas/BookingSummary'
            billable:
              description: 'Is the time tracked billable?'
              type: boolean
              example: 'false'
            locked:
              description: 'Is this time entry locked for further changes?'
              type: boolean
              example: 'false'
          type: object
        -
          $ref: '#/components/schemas/commonModelMeta'
    ProjectTimeEntries:
      title: 'Project Time Entries Model'
      description: 'The time entries attached to a project'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated, unique time entry id'
              type: integer
              readOnly: true
              example: 9879871
            owner_id:
              description: 'ID of the user that owns this time entry'
              type: integer
              example: 872383
            name:
              description: 'Name of the activity that is being worked on'
              type: string
              example: 'Colour Grading'
            description:
              description: 'Short description or notes about what was worked on'
              type: string
              example: 'Opening scenes completed'
            start:
              description: 'Unix Time Entry Start'
              type: integer
              example: 1547501100
            end:
              description: 'Unix Time Entry End'
              type: integer
              example: 1547538900
            booking_id:
              description: 'ID of the booking that is attached to this time entry'
              type: integer
              example: 872383
          type: object
    BookingResourceTimeEntry:
      title: 'Booking Resource Time Entry Model'
      description: 'Time entries recorded by the owner against this booking resource'
      type: object
      allOf:
        -
          properties:
            id:
              description: 'Automatically generated, unique time entry id'
              type: integer
              readOnly: true
              example: 9879871
            name:
              description: 'Name of the activity that is being worked on'
              type: string
              example: 'Colour Grading'
            description:
              description: 'Short description or notes about what was worked on'
              type: string
              example: 'Opening scenes completed'
            start:
              description: 'Unix Time Entry Start'
              type: integer
              example: 1547501100
            end:
              description: 'Unix Time Entry End'
              type: integer
              example: 1547538900
          type: object
    User:
      title: 'User model'
      description: 'Attributes pertaining to users'
      properties:
        id:
          type: integer
          readOnly: true
          example: 4
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Smith
        primary_email:
          type: string
          example: jane.smith@example.com
        username:
          type: string
          example: jsmith
        group_id:
          description: 'The id of the group that this user has been placed in and will use to derive their ACL permissions'
          type: integer
          example: 9223
        timezone:
          description: 'Name of the timezone as described in the tz Database'
          type: string
          example: Australia/Sydney
        locale:
          description: 'Language that will be used in the Sonderplan interface'
          type: string
          enum:
            - en_US
          example: en_US
        date_format:
          description: 'The date format identifier that dates should be formatted in'
          type: string
          enum:
            - j/n/y
            - d/m/y
            - d/m/Y
            - n/j/y
            - m/d/y
            - m/d/Y
            - y/n/j
            - y/m/d
            - Y/m/d
          example: d/m/Y
        time_format:
          description: 'The time format that time should be formatted to, 0 = 12 hour time, 1 = 24 hour / military time'
          type: string
          enum:
            - '0'
            - '1'
          example: '1'
        notification:
          description: 'Should notifications be sent to this user'
          type: boolean
        expires:
          description: 'Unix time of when this user will expire and no longer be able to sign in'
          type: integer
        schedule_view_mode:
          description: 'Applies only if the user is also added as a resource. 0 = Show all bookings, 1 = Anonymize other bookings, 2 = Hide other bookings'
          type: integer
      type: object
    Client:
      title: 'Client model'
      description: 'Client model with some fields'
      properties:
        id:
          type: integer
          readOnly: true
          example: 4
        uuid:
          type: string
          example: p4
        name:
          type: string
          readOnly: true
          example: 'Jane Someone'
        type:
          type: string
          enum:
            - person
            - organization
          readOnly: true
          example: person
        email:
          description: 'The primary email for this contact'
          type: string
          readOnly: true
          example: test@example.com
        contact_person:
          description: 'Contact person at the client. This property is only valid if the client is of type **organization**, and the contact must be a valid client'
          properties:
            id:
              type: integer
              example: 2837
            name:
              type: string
              readOnly: true
              example: 'Fred Flintstone'
          type: object
      type: object
    TimeEntryOwner:
      title: 'Owner Model'
      description: 'User that owns this time entry'
      properties:
        id:
          type: integer
          readOnly: true
          example: 4
      type: object
    ProjectUser:
      title: 'Project members user model'
      description: 'Limited fields user model'
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: 'Jane Smith'
        admin_flag:
          type: integer
          example: 0
        role_id:
          type: integer
          example: 0
        role_name:
          type: string
          example: 0
        project_admin:
          type: boolean
          example: true
        group_write_admin:
          type: boolean
          example: false
      type: object
    GroupUser:
      title: 'Group members user model'
      description: 'Limited fields user model'
      properties:
        id:
          type: integer
          example: 4
        first_name:
          type: string
          example: Jane
        last_name:
          type: string
          example: Smith
        primary_email:
          type: string
          example: jane.smith@example.com
      type: object
    AccessSummary:
      title: 'User Group Access Summary'
      description: 'Users and groups who have access to the object'
      properties:
        id:
          description: 'Unique identifier of the object'
          type: integer
          example: 4
        name:
          description: 'Name of the object'
          type: string
          example: Administrators
        type:
          description: 'The type of the object'
          type: string
          enum:
            - user
            - group
          example: group
      type: object
  parameters:
    fields:
      name: fields
      in: query
      description: 'Comma seperated list of fields you wish to return'
      schema:
        type: string
      example: 'id,name'
    page:
      name: page
      in: query
      description: 'Specify the page of results you wish to return'
      schema:
        type: integer
    limit:
      name: limit
      in: query
      description: 'The number of results returned per page. Default if not specified is 10'
      schema:
        type: integer
    order_asc:
      name: order_asc
      in: query
      description: 'Specify the field (with type of string or integer) you wish to order (ascending) the response with'
      schema:
        type: string
    order_desc:
      name: order_desc
      in: query
      description: 'Specify the field (with type of string or integer) you wish to order (descending) the response with'
      schema:
        type: string
    updated_after:
      name: updated_after
      in: query
      description: 'Return results that were added, edited or deleted since this UNIX timestamp'
      schema:
        type: integer
        format: int32
    filter_operator:
      name: filter_operator
      in: query
      description: 'Specify if multiple filters should be combined with OR or AND logic'
      schema:
        type: string
        default: OR
        enum:
          - OR
          - AND
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
tags:
  -
    name: Booking
    description: 'Booking related operations'
  -
    name: Project
    description: 'Project related operations'
  -
    name: Resource
    description: 'Resource related operations'
  -
    name: Contact
    description: 'Contact related operations'
  -
    name: Quote
    description: 'Quote related operations'
  -
    name: Invoice
    description: 'Invoice related operations'
  -
    name: 'Invoice Template'
    description: 'Invoice template related operations'
  -
    name: 'Billable Item'
    description: 'Billable item related operations'
  -
    name: 'Rate Scheme'
    description: 'Rate scheme related operations'
  -
    name: Tax
    description: 'Tax related operations'
  -
    name: Schedule
    description: 'Schedule related operations'
  -
    name: User
    description: 'User related operations'
  -
    name: Group
    description: 'Group related operations'
  -
    name: Status
    description: 'Status related operations'
  -
    name: 'Custom Field'
    description: 'Custom field related operations'
  -
    name: 'Calendar Subscription'
    description: 'Calendar Subscription Import related operations'
  -
    name: 'Time Entry'
    description: 'Time Entry related operations'
  -
    name: 'Time Activity'
    description: 'Time Activity related operations'
